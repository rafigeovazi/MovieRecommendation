{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/event-target-shim/dist/event-target-shim.mjs","../../node_modules/flatbuffers/js/flatbuffers.mjs","../../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../../node_modules/apache-arrow/util/utf8.mjs","../../node_modules/apache-arrow/io/interfaces.mjs","../../node_modules/apache-arrow/util/compat.mjs","../../node_modules/apache-arrow/util/buffer.mjs","../../node_modules/apache-arrow/io/adapters.mjs","../../node_modules/apache-arrow/vector.mjs","../../node_modules/apache-arrow/fb/Schema.mjs","../../node_modules/apache-arrow/fb/Message.mjs","../../node_modules/apache-arrow/enum.mjs","../../node_modules/apache-arrow/util/bit.mjs","../../node_modules/apache-arrow/visitor.mjs","../../node_modules/apache-arrow/visitor/typecomparator.mjs","../../node_modules/apache-arrow/type.mjs","../../node_modules/apache-arrow/data.mjs","../../node_modules/apache-arrow/util/pretty.mjs","../../node_modules/apache-arrow/builder/valid.mjs","../../node_modules/apache-arrow/builder/buffer.mjs","../../node_modules/apache-arrow/builder.mjs","../../node_modules/apache-arrow/builder/bool.mjs","../../node_modules/apache-arrow/builder/null.mjs","../../node_modules/apache-arrow/builder/date.mjs","../../node_modules/apache-arrow/builder/decimal.mjs","../../node_modules/apache-arrow/builder/dictionary.mjs","../../node_modules/apache-arrow/builder/fixedsizebinary.mjs","../../node_modules/apache-arrow/util/math.mjs","../../node_modules/apache-arrow/builder/float.mjs","../../node_modules/apache-arrow/util/bn.mjs","../../node_modules/apache-arrow/builder/int.mjs","../../node_modules/apache-arrow/builder/time.mjs","../../node_modules/apache-arrow/builder/timestamp.mjs","../../node_modules/apache-arrow/builder/interval.mjs","../../node_modules/apache-arrow/builder/binary.mjs","../../node_modules/apache-arrow/builder/utf8.mjs","../../node_modules/apache-arrow/builder/run.mjs","../../node_modules/apache-arrow/vector/row.mjs","../../node_modules/apache-arrow/util/vector.mjs","../../node_modules/apache-arrow/vector/chunked.mjs","../../node_modules/apache-arrow/column.mjs","../../node_modules/apache-arrow/util/args.mjs","../../node_modules/apache-arrow/schema.mjs","../../node_modules/apache-arrow/builder/list.mjs","../../node_modules/apache-arrow/builder/fixedsizelist.mjs","../../node_modules/apache-arrow/builder/map.mjs","../../node_modules/apache-arrow/builder/struct.mjs","../../node_modules/apache-arrow/builder/union.mjs","../../node_modules/apache-arrow/visitor/set.mjs","../../node_modules/apache-arrow/visitor/builderctor.mjs","../../node_modules/apache-arrow/fb/File.mjs","../../node_modules/apache-arrow/builder/index.mjs","../../node_modules/apache-arrow/ipc/metadata/file.mjs","../../node_modules/apache-arrow/io/stream.mjs","../../node_modules/apache-arrow/io/file.mjs","../../node_modules/apache-arrow/util/int.mjs","../../node_modules/apache-arrow/visitor/vectorloader.mjs","../../node_modules/apache-arrow/visitor/typeassembler.mjs","../../node_modules/apache-arrow/ipc/metadata/json.mjs","../../node_modules/apache-arrow/ipc/metadata/message.mjs","../../node_modules/apache-arrow/ipc/message.mjs","../../node_modules/apache-arrow/visitor/vectorassembler.mjs","../../node_modules/apache-arrow/ipc/writer.mjs","../../node_modules/apache-arrow/util/recordbatch.mjs","../../node_modules/apache-arrow/vector/base.mjs","../../node_modules/apache-arrow/vector/binary.mjs","../../node_modules/apache-arrow/vector/bool.mjs","../../node_modules/apache-arrow/vector/date.mjs","../../node_modules/apache-arrow/vector/decimal.mjs","../../node_modules/apache-arrow/vector/dictionary.mjs","../../node_modules/apache-arrow/vector/fixedsizebinary.mjs","../../node_modules/apache-arrow/vector/fixedsizelist.mjs","../../node_modules/apache-arrow/vector/float.mjs","../../node_modules/apache-arrow/vector/interval.mjs","../../node_modules/apache-arrow/vector/int.mjs","../../node_modules/apache-arrow/vector/list.mjs","../../node_modules/apache-arrow/vector/map.mjs","../../node_modules/apache-arrow/vector/null.mjs","../../node_modules/apache-arrow/vector/struct.mjs","../../node_modules/apache-arrow/vector/timestamp.mjs","../../node_modules/apache-arrow/vector/time.mjs","../../node_modules/apache-arrow/vector/union.mjs","../../node_modules/apache-arrow/vector/utf8.mjs","../../node_modules/apache-arrow/util/fn.mjs","../../node_modules/apache-arrow/visitor/get.mjs","../../node_modules/apache-arrow/visitor/indexof.mjs","../../node_modules/apache-arrow/visitor/iterator.mjs","../../node_modules/apache-arrow/visitor/toarray.mjs","../../node_modules/apache-arrow/visitor/bytewidth.mjs","../../node_modules/apache-arrow/visitor/vectorctor.mjs","../../node_modules/apache-arrow/vector/index.mjs","../../node_modules/apache-arrow/table.mjs","../../node_modules/apache-arrow/recordbatch.mjs","../../node_modules/apache-arrow/ipc/reader.mjs","../../node_modules/apache-arrow/io/whatwg/builder.mjs","../../node_modules/apache-arrow/compute/predicate.mjs","../../node_modules/apache-arrow/compute/dataframe.mjs","../../node_modules/apache-arrow/Arrow.dom.mjs","../../node_modules/apache-arrow/io/whatwg/iterable.mjs","../../node_modules/apache-arrow/io/whatwg/reader.mjs","../../node_modules/apache-arrow/io/whatwg/writer.mjs","../../src/streamlit/ArrowTable.ts","../../src/streamlit/streamlit.ts","../../src/streamlit/WithStreamlitConnection.svelte","../../src/streamlit/setStreamlitLifecycle.ts","../../src/ImageGallery.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexport default EventTarget;\nexport { defineEventAttribute, EventTarget };\n//# sourceMappingURL=event-target-shim.mjs.map\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from './buffer';\nimport { TextDecoder as TextDecoderPolyfill, TextEncoder as TextEncoderPolyfill, } from 'text-encoding-utf-8';\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer) => decoder.decode(buffer);\n    }\n    return (input) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\n/** @ignore */\nexport const ITERATOR_DONE = Object.freeze({ done: true, value: void (0) });\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(_json) {\n        this._json = _json;\n    }\n    get schema() { return this._json['schema']; }\n    get batches() { return (this._json['batches'] || []); }\n    get dictionaries() { return (this._json['dictionaries'] || []); }\n}\n/** @ignore */\nexport class ReadableInterop {\n    tee() {\n        return this._getDOMStream().tee();\n    }\n    pipe(writable, options) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    pipeTo(writable, options) { return this._getDOMStream().pipeTo(writable, options); }\n    pipeThrough(duplex, options) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n    _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n    _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n/** @ignore */\nexport class AsyncQueue extends ReadableInterop {\n    constructor() {\n        super();\n        this._values = [];\n        this.resolvers = [];\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    get closed() { return this._closedPromise; }\n    async cancel(reason) { await this.return(reason); }\n    write(value) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift().resolve({ done: false, value }));\n        }\n    }\n    abort(value) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift().reject({ done: true, value }));\n        }\n    }\n    close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift().resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    toDOMStream(options) {\n        return streamAdapters.toDOMStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    toNodeStream(options) {\n        return streamAdapters.toNodeStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    async throw(_) { await this.abort(_); return ITERATOR_DONE; }\n    async return(_) { await this.close(); return ITERATOR_DONE; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    next(..._args) {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift() });\n        }\n        else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        }\n        else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n    _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n\n//# sourceMappingURL=interfaces.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ReadableInterop } from '../io/interfaces';\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n/** @ignore */ const isNumber = (x) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexport const isPromise = (x) => {\n    return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexport const isObservable = (x) => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\nexport const isIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\nexport const isAsyncIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\nexport const isArrowJSON = (x) => {\n    return isObject(x) && isObject(x['schema']);\n};\n/** @ignore */\nexport const isArrayLike = (x) => {\n    return isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\nexport const isIteratorResult = (x) => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n/** @ignore */\nexport const isUnderlyingSink = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n/** @ignore */\nexport const isFileHandle = (x) => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\nexport const isFSReadStream = (x) => {\n    return isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\nexport const isFetchResponse = (x) => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n/** @ignore */\nexport const isWritableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isWritableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n//# sourceMappingURL=compat.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset, yOffset, xLen, yLen;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n/** @ignore */\nexport function memcpy(target, source, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n/** @ignore */\nexport function joinUint8Arrays(chunks, size) {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source, sliced, buffer;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            }\n            else if (sliced.length === source.length) {\n                index++;\n            }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\nexport function toArrayBufferView(ArrayBufferViewCtor, input) {\n    let value = isIteratorResult(input) ? input.value : input;\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) {\n        return new ArrayBufferViewCtor(0);\n    }\n    if (typeof value === 'string') {\n        value = encodeUtf8(value);\n    }\n    if (value instanceof ArrayBuffer) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof SharedArrayBuf) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof ByteBuffer) {\n        return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n    }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n/** @ignore */ export const toInt8Array = (input) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input) => toArrayBufferView(Uint8ClampedArray, input);\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nexport function* toArrayBufferViewIterator(ArrayCtor, source) {\n    const wrap = function* (x) { yield x; };\n    const buffers = (typeof source === 'string') ? wrap(source)\n        : (ArrayBuffer.isView(source)) ? wrap(source)\n            : (source instanceof ArrayBuffer) ? wrap(source)\n                : (source instanceof SharedArrayBuf) ? wrap(source)\n                    : !isIterable(source) ? wrap(source) : source;\n    yield* pump((function* (it) {\n        let r = null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n/** @ignore */ export const toInt8ArrayIterator = (input) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n    const wrap = async function* (x) { yield await x; };\n    const emit = async function* (source) {\n        yield* pump((function* (it) {\n            let r = null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n    const buffers = (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n        : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n            : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                    : isIterable(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                        : !isAsyncIterable(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                            : source; // otherwise if AsyncIterable, use it\n    yield* pump((async function* (it) {\n        let r = null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport function rebaseValueOffsets(offset, length, valueOffsets) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n/** @ignore */\nexport function compareArrayLike(a, b) {\n    let i = 0, n = a.length;\n    if (n !== b.length) {\n        return false;\n    }\n    if (n > 0) {\n        do {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        } while (++i < n);\n    }\n    return true;\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array, joinUint8Arrays, toUint8ArrayIterator, toUint8ArrayAsyncIterator } from '../util/buffer';\n/** @ignore */\nexport default {\n    fromIterable(source) {\n        return pump(fromIterable(source));\n    },\n    fromAsyncIterable(source) {\n        return pump(fromAsyncIterable(source));\n    },\n    fromDOMStream(source) {\n        return pump(fromDOMStream(source));\n    },\n    fromNodeStream(stream) {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream(source, options) {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream(source, options) {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* fromIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n/** @ignore */\nasync function* fromAsyncIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream(source) {\n    let done = false, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield null);\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    }\n    finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n/** @ignore */\nclass AdaptiveByteReader {\n    constructor(source) {\n        this.source = source;\n        this.byobReader = null;\n        this.defaultReader = null;\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        }\n        catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n    get closed() {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n    releaseLock() {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n    async cancel(reason) {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => { }));\n        source && (source['locked'] && this.releaseLock());\n    }\n    async read(size) {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result));\n        return result;\n    }\n    getDefaultReader() {\n        if (this.byobReader) {\n            this.releaseLock();\n        }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.defaultReader);\n    }\n    getBYOBReader() {\n        if (this.defaultReader) {\n            this.releaseLock();\n        }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.byobReader);\n    }\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    async readFromBYOBReader(size) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n/** @ignore */\nasync function readInto(reader, buffer, offset, size) {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n    let handler = (_) => resolve([event, _]);\n    let resolve;\n    return [event, handler, new Promise((r) => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nasync function* fromNodeStream(stream) {\n    let events = [];\n    let event = 'error';\n    let done = false, err = null;\n    let cmd, size, bufferLength = 0;\n    let buffers = [], buffer;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield null);\n    // ignore stdin if it's a TTY\n    if (stream['isTTY']) {\n        return yield new Uint8Array(0);\n    }\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n        do {\n            events[2] = onEvent(stream, 'readable');\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') {\n                break;\n            }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                }\n                else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n    function cleanup(events, err) {\n        buffer = buffers = null;\n        return new Promise(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = stream['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            }\n            catch (e) {\n                err = e || err;\n            }\n            finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=adapters.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport class AbstractVector {\n}\nexport { AbstractVector as Vector };\n\n//# sourceMappingURL=vector.mjs.map\n","/* tslint:disable:class-name */\n/**\n * @enum {number}\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MetadataVersion;\n                (function (MetadataVersion) {\n                    /**\n                     * 0.1.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n                    /**\n                     * 0.2.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n                    /**\n                     * 0.3.0 -> 0.7.1\n                     */\n                    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n                    /**\n                     * >= 0.8.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n                })(MetadataVersion = flatbuf.MetadataVersion || (flatbuf.MetadataVersion = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let UnionMode;\n                (function (UnionMode) {\n                    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n                    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n                })(UnionMode = flatbuf.UnionMode || (flatbuf.UnionMode = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Precision;\n                (function (Precision) {\n                    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n                    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n                    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n                })(Precision = flatbuf.Precision || (flatbuf.Precision = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let DateUnit;\n                (function (DateUnit) {\n                    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n                    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                })(DateUnit = flatbuf.DateUnit || (flatbuf.DateUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let TimeUnit;\n                (function (TimeUnit) {\n                    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n                    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n                    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n                })(TimeUnit = flatbuf.TimeUnit || (flatbuf.TimeUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let IntervalUnit;\n                (function (IntervalUnit) {\n                    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n                    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n                })(IntervalUnit = flatbuf.IntervalUnit || (flatbuf.IntervalUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Type;\n                (function (Type) {\n                    Type[Type[\"NONE\"] = 0] = \"NONE\";\n                    Type[Type[\"Null\"] = 1] = \"Null\";\n                    Type[Type[\"Int\"] = 2] = \"Int\";\n                    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n                    Type[Type[\"Binary\"] = 4] = \"Binary\";\n                    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n                    Type[Type[\"Bool\"] = 6] = \"Bool\";\n                    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n                    Type[Type[\"Date\"] = 8] = \"Date\";\n                    Type[Type[\"Time\"] = 9] = \"Time\";\n                    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n                    Type[Type[\"Interval\"] = 11] = \"Interval\";\n                    Type[Type[\"List\"] = 12] = \"List\";\n                    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n                    Type[Type[\"Union\"] = 14] = \"Union\";\n                    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n                    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n                    Type[Type[\"Map\"] = 17] = \"Map\";\n                    Type[Type[\"Duration\"] = 18] = \"Duration\";\n                    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n                    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n                    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n                })(Type = flatbuf.Type || (flatbuf.Type = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Endianness;\n                (function (Endianness) {\n                    Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n                    Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n                })(Endianness = flatbuf.Endianness || (flatbuf.Endianness = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Null {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Null\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Null= obj\n                     * @returns Null\n                     */\n                    static getRootAsNull(bb, obj) {\n                        return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startNull(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endNull(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createNull(builder) {\n                        Null.startNull(builder);\n                        return Null.endNull(builder);\n                    }\n                }\n                flatbuf.Null = Null;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Struct_ {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Struct_\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Struct_= obj\n                     * @returns Struct_\n                     */\n                    static getRootAsStruct_(bb, obj) {\n                        return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startStruct_(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endStruct_(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createStruct_(builder) {\n                        Struct_.startStruct_(builder);\n                        return Struct_.endStruct_(builder);\n                    }\n                }\n                flatbuf.Struct_ = Struct_;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class List {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns List\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param List= obj\n                     * @returns List\n                     */\n                    static getRootAsList(bb, obj) {\n                        return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createList(builder) {\n                        List.startList(builder);\n                        return List.endList(builder);\n                    }\n                }\n                flatbuf.List = List;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeList= obj\n                     * @returns LargeList\n                     */\n                    static getRootAsLargeList(bb, obj) {\n                        return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeList(builder) {\n                        LargeList.startLargeList(builder);\n                        return LargeList.endLargeList(builder);\n                    }\n                }\n                flatbuf.LargeList = LargeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeList= obj\n                     * @returns FixedSizeList\n                     */\n                    static getRootAsFixedSizeList(bb, obj) {\n                        return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of list items per value\n                     *\n                     * @returns number\n                     */\n                    listSize() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeList(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number listSize\n                     */\n                    static addListSize(builder, listSize) {\n                        builder.addFieldInt32(0, listSize, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeList(builder, listSize) {\n                        FixedSizeList.startFixedSizeList(builder);\n                        FixedSizeList.addListSize(builder, listSize);\n                        return FixedSizeList.endFixedSizeList(builder);\n                    }\n                }\n                flatbuf.FixedSizeList = FixedSizeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Map {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Map\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Map= obj\n                     * @returns Map\n                     */\n                    static getRootAsMap(bb, obj) {\n                        return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Set to true if the keys within each value are sorted\n                     *\n                     * @returns boolean\n                     */\n                    keysSorted() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMap(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean keysSorted\n                     */\n                    static addKeysSorted(builder, keysSorted) {\n                        builder.addFieldInt8(0, +keysSorted, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMap(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createMap(builder, keysSorted) {\n                        Map.startMap(builder);\n                        Map.addKeysSorted(builder, keysSorted);\n                        return Map.endMap(builder);\n                    }\n                }\n                flatbuf.Map = Map;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Union {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Union\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Union= obj\n                     * @returns Union\n                     */\n                    static getRootAsUnion(bb, obj) {\n                        return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.UnionMode\n                     */\n                    mode() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n                    }\n                    /**\n                     * @param number index\n                     * @returns number\n                     */\n                    typeIds(index) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    typeIdsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns Int32Array\n                     */\n                    typeIdsArray() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUnion(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.UnionMode mode\n                     */\n                    static addMode(builder, mode) {\n                        builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeIdsOffset\n                     */\n                    static addTypeIds(builder, typeIdsOffset) {\n                        builder.addFieldOffset(1, typeIdsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<number> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createTypeIdsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addInt32(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startTypeIdsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUnion(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUnion(builder, mode, typeIdsOffset) {\n                        Union.startUnion(builder);\n                        Union.addMode(builder, mode);\n                        Union.addTypeIds(builder, typeIdsOffset);\n                        return Union.endUnion(builder);\n                    }\n                }\n                flatbuf.Union = Union;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Int {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Int\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Int= obj\n                     * @returns Int\n                     */\n                    static getRootAsInt(bb, obj) {\n                        return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns boolean\n                     */\n                    isSigned() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInt(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(0, bitWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isSigned\n                     */\n                    static addIsSigned(builder, isSigned) {\n                        builder.addFieldInt8(1, +isSigned, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInt(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInt(builder, bitWidth, isSigned) {\n                        Int.startInt(builder);\n                        Int.addBitWidth(builder, bitWidth);\n                        Int.addIsSigned(builder, isSigned);\n                        return Int.endInt(builder);\n                    }\n                }\n                flatbuf.Int = Int;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FloatingPoint {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FloatingPoint\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FloatingPoint= obj\n                     * @returns FloatingPoint\n                     */\n                    static getRootAsFloatingPoint(bb, obj) {\n                        return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Precision\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFloatingPoint(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Precision precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFloatingPoint(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFloatingPoint(builder, precision) {\n                        FloatingPoint.startFloatingPoint(builder);\n                        FloatingPoint.addPrecision(builder, precision);\n                        return FloatingPoint.endFloatingPoint(builder);\n                    }\n                }\n                flatbuf.FloatingPoint = FloatingPoint;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Utf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Utf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Utf8= obj\n                     * @returns Utf8\n                     */\n                    static getRootAsUtf8(bb, obj) {\n                        return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUtf8(builder) {\n                        Utf8.startUtf8(builder);\n                        return Utf8.endUtf8(builder);\n                    }\n                }\n                flatbuf.Utf8 = Utf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Opaque binary data\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Binary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Binary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Binary= obj\n                     * @returns Binary\n                     */\n                    static getRootAsBinary(bb, obj) {\n                        return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBinary(builder) {\n                        Binary.startBinary(builder);\n                        return Binary.endBinary(builder);\n                    }\n                }\n                flatbuf.Binary = Binary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeUtf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeUtf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeUtf8= obj\n                     * @returns LargeUtf8\n                     */\n                    static getRootAsLargeUtf8(bb, obj) {\n                        return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeUtf8(builder) {\n                        LargeUtf8.startLargeUtf8(builder);\n                        return LargeUtf8.endLargeUtf8(builder);\n                    }\n                }\n                flatbuf.LargeUtf8 = LargeUtf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeBinary= obj\n                     * @returns LargeBinary\n                     */\n                    static getRootAsLargeBinary(bb, obj) {\n                        return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeBinary(builder) {\n                        LargeBinary.startLargeBinary(builder);\n                        return LargeBinary.endLargeBinary(builder);\n                    }\n                }\n                flatbuf.LargeBinary = LargeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeBinary= obj\n                     * @returns FixedSizeBinary\n                     */\n                    static getRootAsFixedSizeBinary(bb, obj) {\n                        return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of bytes per value\n                     *\n                     * @returns number\n                     */\n                    byteWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeBinary(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number byteWidth\n                     */\n                    static addByteWidth(builder, byteWidth) {\n                        builder.addFieldInt32(0, byteWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeBinary(builder, byteWidth) {\n                        FixedSizeBinary.startFixedSizeBinary(builder);\n                        FixedSizeBinary.addByteWidth(builder, byteWidth);\n                        return FixedSizeBinary.endFixedSizeBinary(builder);\n                    }\n                }\n                flatbuf.FixedSizeBinary = FixedSizeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Bool {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Bool\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Bool= obj\n                     * @returns Bool\n                     */\n                    static getRootAsBool(bb, obj) {\n                        return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBool(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBool(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBool(builder) {\n                        Bool.startBool(builder);\n                        return Bool.endBool(builder);\n                    }\n                }\n                flatbuf.Bool = Bool;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Decimal {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Decimal\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Decimal= obj\n                     * @returns Decimal\n                     */\n                    static getRootAsDecimal(bb, obj) {\n                        return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Total number of decimal digits\n                     *\n                     * @returns number\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Number of digits after the decimal point \".\"\n                     *\n                     * @returns number\n                     */\n                    scale() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDecimal(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt32(0, precision, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number scale\n                     */\n                    static addScale(builder, scale) {\n                        builder.addFieldInt32(1, scale, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDecimal(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDecimal(builder, precision, scale) {\n                        Decimal.startDecimal(builder);\n                        Decimal.addPrecision(builder, precision);\n                        Decimal.addScale(builder, scale);\n                        return Decimal.endDecimal(builder);\n                    }\n                }\n                flatbuf.Decimal = Decimal;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Date {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Date\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Date= obj\n                     * @returns Date\n                     */\n                    static getRootAsDate(bb, obj) {\n                        return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.DateUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDate(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.DateUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDate(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDate(builder, unit) {\n                        Date.startDate(builder);\n                        Date.addUnit(builder, unit);\n                        return Date.endDate(builder);\n                    }\n                }\n                flatbuf.Date = Date;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Time {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Time\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Time= obj\n                     * @returns Time\n                     */\n                    static getRootAsTime(bb, obj) {\n                        return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTime(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(1, bitWidth, 32);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTime(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTime(builder, unit, bitWidth) {\n                        Time.startTime(builder);\n                        Time.addUnit(builder, unit);\n                        Time.addBitWidth(builder, bitWidth);\n                        return Time.endTime(builder);\n                    }\n                }\n                flatbuf.Time = Time;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Timestamp {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Timestamp\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Timestamp= obj\n                     * @returns Timestamp\n                     */\n                    static getRootAsTimestamp(bb, obj) {\n                        return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n                    }\n                    timezone(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTimestamp(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset timezoneOffset\n                     */\n                    static addTimezone(builder, timezoneOffset) {\n                        builder.addFieldOffset(1, timezoneOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTimestamp(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTimestamp(builder, unit, timezoneOffset) {\n                        Timestamp.startTimestamp(builder);\n                        Timestamp.addUnit(builder, unit);\n                        Timestamp.addTimezone(builder, timezoneOffset);\n                        return Timestamp.endTimestamp(builder);\n                    }\n                }\n                flatbuf.Timestamp = Timestamp;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Interval {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Interval\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Interval= obj\n                     * @returns Interval\n                     */\n                    static getRootAsInterval(bb, obj) {\n                        return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.IntervalUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInterval(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.IntervalUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInterval(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInterval(builder, unit) {\n                        Interval.startInterval(builder);\n                        Interval.addUnit(builder, unit);\n                        return Interval.endInterval(builder);\n                    }\n                }\n                flatbuf.Interval = Interval;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Duration {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Duration\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Duration= obj\n                     * @returns Duration\n                     */\n                    static getRootAsDuration(bb, obj) {\n                        return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDuration(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDuration(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDuration(builder, unit) {\n                        Duration.startDuration(builder);\n                        Duration.addUnit(builder, unit);\n                        return Duration.endDuration(builder);\n                    }\n                }\n                flatbuf.Duration = Duration;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class KeyValue {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns KeyValue\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param KeyValue= obj\n                     * @returns KeyValue\n                     */\n                    static getRootAsKeyValue(bb, obj) {\n                        return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    key(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    value(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startKeyValue(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset keyOffset\n                     */\n                    static addKey(builder, keyOffset) {\n                        builder.addFieldOffset(0, keyOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset valueOffset\n                     */\n                    static addValue(builder, valueOffset) {\n                        builder.addFieldOffset(1, valueOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endKeyValue(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createKeyValue(builder, keyOffset, valueOffset) {\n                        KeyValue.startKeyValue(builder);\n                        KeyValue.addKey(builder, keyOffset);\n                        KeyValue.addValue(builder, valueOffset);\n                        return KeyValue.endKeyValue(builder);\n                    }\n                }\n                flatbuf.KeyValue = KeyValue;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryEncoding {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryEncoding\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryEncoding= obj\n                     * @returns DictionaryEncoding\n                     */\n                    static getRootAsDictionaryEncoding(bb, obj) {\n                        return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * The known dictionary id in the application where this data is used. In\n                     * the file or streaming formats, the dictionary ids are found in the\n                     * DictionaryBatch messages\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * The dictionary indices are constrained to be positive integers. If this\n                     * field is null, the indices must be signed int32\n                     *\n                     * @param org.apache.arrow.flatbuf.Int= obj\n                     * @returns org.apache.arrow.flatbuf.Int|null\n                     */\n                    indexType(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * By default, dictionaries are not ordered, or the order does not have\n                     * semantic meaning. In some statistical, applications, dictionary-encoding\n                     * is used to represent ordered categorical data, and we provide a way to\n                     * preserve that metadata here\n                     *\n                     * @returns boolean\n                     */\n                    isOrdered() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryEncoding(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset indexTypeOffset\n                     */\n                    static addIndexType(builder, indexTypeOffset) {\n                        builder.addFieldOffset(1, indexTypeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isOrdered\n                     */\n                    static addIsOrdered(builder, isOrdered) {\n                        builder.addFieldInt8(2, +isOrdered, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryEncoding(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryEncoding(builder, id, indexTypeOffset, isOrdered) {\n                        DictionaryEncoding.startDictionaryEncoding(builder);\n                        DictionaryEncoding.addId(builder, id);\n                        DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n                        DictionaryEncoding.addIsOrdered(builder, isOrdered);\n                        return DictionaryEncoding.endDictionaryEncoding(builder);\n                    }\n                }\n                flatbuf.DictionaryEncoding = DictionaryEncoding;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Field {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Field\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Field= obj\n                     * @returns Field\n                     */\n                    static getRootAsField(bb, obj) {\n                        return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    name(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * Whether or not this field can contain nulls. Should be true in general.\n                     *\n                     * @returns boolean\n                     */\n                    nullable() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Type\n                     */\n                    typeType() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n                    }\n                    /**\n                     * This is the type of the decoded value if the field is dictionary encoded.\n                     *\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    type(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * Present only if the field is dictionary encoded.\n                     *\n                     * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n                     * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n                     */\n                    dictionary(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * children apply only to nested data types like Struct, List and Union. For\n                     * primitive types children will have length 0.\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    children(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    childrenLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * User-defined metadata\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startField(builder) {\n                        builder.startObject(7);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nameOffset\n                     */\n                    static addName(builder, nameOffset) {\n                        builder.addFieldOffset(0, nameOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean nullable\n                     */\n                    static addNullable(builder, nullable) {\n                        builder.addFieldInt8(1, +nullable, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Type typeType\n                     */\n                    static addTypeType(builder, typeType) {\n                        builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeOffset\n                     */\n                    static addType(builder, typeOffset) {\n                        builder.addFieldOffset(3, typeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionaryOffset\n                     */\n                    static addDictionary(builder, dictionaryOffset) {\n                        builder.addFieldOffset(4, dictionaryOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset childrenOffset\n                     */\n                    static addChildren(builder, childrenOffset) {\n                        builder.addFieldOffset(5, childrenOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createChildrenVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startChildrenVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(6, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endField(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createField(builder, nameOffset, nullable, typeType, typeOffset, dictionaryOffset, childrenOffset, customMetadataOffset) {\n                        Field.startField(builder);\n                        Field.addName(builder, nameOffset);\n                        Field.addNullable(builder, nullable);\n                        Field.addTypeType(builder, typeType);\n                        Field.addType(builder, typeOffset);\n                        Field.addDictionary(builder, dictionaryOffset);\n                        Field.addChildren(builder, childrenOffset);\n                        Field.addCustomMetadata(builder, customMetadataOffset);\n                        return Field.endField(builder);\n                    }\n                }\n                flatbuf.Field = Field;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Buffer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Buffer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The relative offset into the shared memory page where the bytes for this\n                     * buffer starts\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The absolute length (in bytes) of the memory buffer. The memory is found\n                     * from offset (inclusive) to offset + length (non-inclusive).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param flatbuffers.Long length\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBuffer(builder, offset, length) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(length);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Buffer = Buffer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Schema {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Schema\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Schema= obj\n                     * @returns Schema\n                     */\n                    static getRootAsSchema(bb, obj) {\n                        return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * endianness of the buffer\n                     * it is Little Endian by default\n                     * if endianness doesn't match the underlying system then the vectors need to be converted\n                     *\n                     * @returns org.apache.arrow.flatbuf.Endianness\n                     */\n                    endianness() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    fields(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    fieldsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startSchema(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Endianness endianness\n                     */\n                    static addEndianness(builder, endianness) {\n                        builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset fieldsOffset\n                     */\n                    static addFields(builder, fieldsOffset) {\n                        builder.addFieldOffset(1, fieldsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startFieldsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(2, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endSchema(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishSchemaBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createSchema(builder, endianness, fieldsOffset, customMetadataOffset) {\n                        Schema.startSchema(builder);\n                        Schema.addEndianness(builder, endianness);\n                        Schema.addFields(builder, fieldsOffset);\n                        Schema.addCustomMetadata(builder, customMetadataOffset);\n                        return Schema.endSchema(builder);\n                    }\n                }\n                flatbuf.Schema = Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Schema.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                flatbuf.Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MessageHeader;\n                (function (MessageHeader) {\n                    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n                    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n                    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n                    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n                    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n                    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n                })(MessageHeader = flatbuf.MessageHeader || (flatbuf.MessageHeader = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FieldNode {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FieldNode\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The number of value slots in the Arrow array at this level of a nested\n                     * tree\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The number of observed nulls. Fields with null_count == 0 may choose not\n                     * to write their physical validity bitmap out as a materialized buffer,\n                     * instead setting the length of the bitmap buffer to 0.\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    nullCount() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     * @param flatbuffers.Long null_count\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldNode(builder, length, null_count) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(null_count);\n                        builder.writeInt64(length);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.FieldNode = FieldNode;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class RecordBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns RecordBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param RecordBatch= obj\n                     * @returns RecordBatch\n                     */\n                    static getRootAsRecordBatch(bb, obj) {\n                        return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * number of records / rows. The arrays in the batch should all have this\n                     * length\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * Nodes correspond to the pre-ordered flattened logical schema\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.FieldNode= obj\n                     * @returns org.apache.arrow.flatbuf.FieldNode\n                     */\n                    nodes(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    nodesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Buffers correspond to the pre-ordered flattened buffer tree\n                     *\n                     * The number of buffers appended to this list depends on the schema. For\n                     * example, most primitive arrays will have 2 buffers, 1 for the validity\n                     * bitmap and 1 for the values. For struct arrays, there will only be a\n                     * single buffer for the validity (nulls) bitmap\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Buffer= obj\n                     * @returns org.apache.arrow.flatbuf.Buffer\n                     */\n                    buffers(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    buffersLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startRecordBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     */\n                    static addLength(builder, length) {\n                        builder.addFieldInt64(0, length, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nodesOffset\n                     */\n                    static addNodes(builder, nodesOffset) {\n                        builder.addFieldOffset(1, nodesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startNodesVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset buffersOffset\n                     */\n                    static addBuffers(builder, buffersOffset) {\n                        builder.addFieldOffset(2, buffersOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startBuffersVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endRecordBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createRecordBatch(builder, length, nodesOffset, buffersOffset) {\n                        RecordBatch.startRecordBatch(builder);\n                        RecordBatch.addLength(builder, length);\n                        RecordBatch.addNodes(builder, nodesOffset);\n                        RecordBatch.addBuffers(builder, buffersOffset);\n                        return RecordBatch.endRecordBatch(builder);\n                    }\n                }\n                flatbuf.RecordBatch = RecordBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryBatch= obj\n                     * @returns DictionaryBatch\n                     */\n                    static getRootAsDictionaryBatch(bb, obj) {\n                        return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.RecordBatch= obj\n                     * @returns org.apache.arrow.flatbuf.RecordBatch|null\n                     */\n                    data(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * If isDelta is true the values in the dictionary are to be appended to a\n                     * dictionary with the indicated id\n                     *\n                     * @returns boolean\n                     */\n                    isDelta() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dataOffset\n                     */\n                    static addData(builder, dataOffset) {\n                        builder.addFieldOffset(1, dataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isDelta\n                     */\n                    static addIsDelta(builder, isDelta) {\n                        builder.addFieldInt8(2, +isDelta, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryBatch(builder, id, dataOffset, isDelta) {\n                        DictionaryBatch.startDictionaryBatch(builder);\n                        DictionaryBatch.addId(builder, id);\n                        DictionaryBatch.addData(builder, dataOffset);\n                        DictionaryBatch.addIsDelta(builder, isDelta);\n                        return DictionaryBatch.endDictionaryBatch(builder);\n                    }\n                }\n                flatbuf.DictionaryBatch = DictionaryBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Message {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Message\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Message= obj\n                     * @returns Message\n                     */\n                    static getRootAsMessage(bb, obj) {\n                        return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MessageHeader\n                     */\n                    headerType() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n                    }\n                    /**\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    header(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMessage(builder) {\n                        builder.startObject(5);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MessageHeader headerType\n                     */\n                    static addHeaderType(builder, headerType) {\n                        builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset headerOffset\n                     */\n                    static addHeader(builder, headerOffset) {\n                        builder.addFieldOffset(2, headerOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long bodyLength\n                     */\n                    static addBodyLength(builder, bodyLength) {\n                        builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(4, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMessage(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishMessageBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n                        Message.startMessage(builder);\n                        Message.addVersion(builder, version);\n                        Message.addHeaderType(builder, headerType);\n                        Message.addHeader(builder, headerOffset);\n                        Message.addBodyLength(builder, bodyLength);\n                        Message.addCustomMetadata(builder, customMetadataOffset);\n                        return Message.endMessage(builder);\n                    }\n                }\n                flatbuf.Message = Message;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\nexport var ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport var DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport var TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport var Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport var UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport var IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport var MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport var MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    /** The default placeholder type */\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    /** A NULL type having no physical storage */\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    /** 2, 4, or 8-byte floating point value */\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    /** UTF8 variable-length string as List<Char> */\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    /** A list of some logical data type */\n    Type[Type[\"List\"] = 12] = \"List\";\n    /** Struct of logical types */\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    /** Union of logical types */\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    /** Map of named logical types */\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    /** Dictionary aka Category type */\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type || (Type = {}));\nexport var BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n\n//# sourceMappingURL=enum.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nexport function getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nexport function setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n/** @ignore */\nexport function truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n/** @ignore */\nexport function packBools(values) {\n    let xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n/** @ignore */\nexport function* iterateBits(bytes, begin, length, context, get) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\n/** @ignore */\nexport function popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = byteOffset | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n/** @ignore */\nexport function popcnt_uint32(uint32) {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n\n//# sourceMappingURL=bit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, } from './type';\nexport class Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    let fn = null;\n    let dtype = Type.NONE;\n    // tslint:disable\n    if (node instanceof Data) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof Vector) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof DataType) {\n        dtype = inferDType(node);\n    }\n    else if (typeof (dtype = node) !== 'number') {\n        dtype = Type[node];\n    }\n    switch (dtype) {\n        case Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case Type.List:\n            fn = visitor.visitList;\n            break;\n        case Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? Type.Int8 : Type.Uint8;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch (type.precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch (type.unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch (type.unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch (type.mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n\n//# sourceMappingURL=visitor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas(schema, other) {\n        return (schema === other) || (other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields));\n    }\n    compareFields(fields, others) {\n        return (fields === others) || (Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i])));\n    }\n    compareField(field, other) {\n        return (field === other) || (other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type));\n    }\n}\nfunction compareConstructor(type, other) {\n    return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n    return (type === other) || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned);\n}\nfunction compareFloat(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.precision === other.precision);\n}\nfunction compareFixedSizeBinary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth);\n}\nfunction compareDate(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareTimestamp(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone);\n}\nfunction compareTime(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth);\n}\nfunction compareList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareStruct(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareUnion(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareDictionary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary));\n}\nfunction compareInterval(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareFixedSizeList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareMap(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nexport const instance = new TypeComparator();\n\n//# sourceMappingURL=typecomparator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { instance as comparer } from './visitor/typecomparator';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return x && x.typeId === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return x && x.typeId === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return x && x.typeId === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return x && x.typeId === Type.Binary; }\n    /** @nocollapse */ static isUtf8(x) { return x && x.typeId === Type.Utf8; }\n    /** @nocollapse */ static isBool(x) { return x && x.typeId === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return x && x.typeId === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return x && x.typeId === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return x && x.typeId === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return x && x.typeId === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return x && x.typeId === Type.Interval; }\n    /** @nocollapse */ static isList(x) { return x && x.typeId === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return x && x.typeId === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return x && x.typeId === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return x && x.typeId === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return x && x.typeId === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return x && x.typeId === Type.Dictionary; }\n    get typeId() { return Type.NONE; }\n    compareTo(other) {\n        return comparer.visit(this, other);\n    }\n}\nDataType[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    toString() { return `Null`; }\n    get typeId() { return Type.Null; }\n}\nNull[Symbol.toStringTag] = ((proto) => {\n    return proto[Symbol.toStringTag] = 'Null';\n})(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super();\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Int; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\nInt_[Symbol.toStringTag] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super();\n        this.precision = precision;\n    }\n    get typeId() { return Type.Float; }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\nFloat[Symbol.toStringTag] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Binary; }\n    toString() { return `Binary`; }\n}\nBinary[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Utf8; }\n    toString() { return `Utf8`; }\n}\nUtf8[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Bool; }\n    toString() { return `Bool`; }\n}\nBool[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision) {\n        super();\n        this.scale = scale;\n        this.precision = precision;\n    }\n    get typeId() { return Type.Decimal; }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\nDecimal[Symbol.toStringTag] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Date; }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\nDate_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super();\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Time; }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n}\nTime_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super();\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    get typeId() { return Type.Timestamp; }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\nTimestamp_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Interval; }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\nInterval_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super();\n        this.children = [child];\n    }\n    get typeId() { return Type.List; }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\nList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    get typeId() { return Type.Struct; }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nStruct[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null));\n    }\n    get typeId() { return Type.Union; }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\nUnion_[Symbol.toStringTag] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super();\n        this.byteWidth = byteWidth;\n    }\n    get typeId() { return Type.FixedSizeBinary; }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\nFixedSizeBinary[Symbol.toStringTag] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super();\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get typeId() { return Type.FixedSizeList; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\nFixedSizeList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(child, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    get typeId() { return Type.Map; }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nMap_[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    get typeId() { return Type.Dictionary; }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\nDictionary[Symbol.toStringTag] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    let t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        case Type.Int: return 1 + +(t.bitWidth > 32);\n        case Type.Time: return 1 + +(t.bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\n/** @ignore */ export const kUnknownNullCount = -1;\n/** @ignore */\nexport class Data {\n    constructor(type, offset, length, nullCount, buffers, childData, dictionary) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data);\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get byteLength() {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    clone(type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, childData = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(childData, offset, length) {\n        return childData.map((child) => child.slice(offset, length));\n    }\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    static new(type, offset, length, nullCount, buffers, childData, dictionary) {\n        if (buffers instanceof Data) {\n            buffers = buffers.buffers;\n        }\n        else if (!buffers) {\n            buffers = [];\n        }\n        switch (type.typeId) {\n            case Type.Null: return Data.Null(type, offset, length);\n            case Type.Int: return Data.Int(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Dictionary: return Data.Dictionary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary);\n            case Type.Float: return Data.Float(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Bool: return Data.Bool(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Decimal: return Data.Decimal(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Date: return Data.Date(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Time: return Data.Time(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Timestamp: return Data.Timestamp(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Interval: return Data.Interval(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.FixedSizeBinary: return Data.FixedSizeBinary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Binary: return Data.Binary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.Utf8: return Data.Utf8(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.List: return Data.List(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.FixedSizeList: return Data.FixedSizeList(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]);\n            case Type.Struct: return Data.Struct(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []);\n            case Type.Map: return Data.Map(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.Union: return Data.Union(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData);\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n    /** @nocollapse */\n    static Null(type, offset, length) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    static Int(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Dictionary(type, offset, length, nullCount, nullBitmap, data, dictionary) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    static Float(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Bool(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Decimal(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Date(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Time(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Timestamp(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Interval(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static FixedSizeBinary(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Binary(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Utf8(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static List(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static FixedSizeList(type, offset, length, nullCount, nullBitmap, child) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Struct(type, offset, length, nullCount, nullBitmap, children) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    static Map(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Union(type, offset, length, nullCount, nullBitmap, typeIds, valueOffsetsOrChildren, children) {\n        const buffers = [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ];\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\nData.prototype.childData = Object.freeze([]);\n\n//# sourceMappingURL=data.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */ const undf = void (0);\n/** @ignore */\nexport function valueToString(x) {\n    if (x === null) {\n        return 'null';\n    }\n    if (x === undf) {\n        return 'undefined';\n    }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n\n//# sourceMappingURL=pretty.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction(nullValues) {\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value) { return true; };\n    }\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n    return new Function(`x`, `${fnBody}\\nreturn true;`);\n}\n/** @ignore */\nfunction valueToCase(x) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    }\n    else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n\n//# sourceMappingURL=valid.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len, BPE) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = (arr, len = 0) => (arr.length >= len ? arr.subarray(0, len) : memcpy(new arr.constructor(len), arr, 0));\n/** @ignore */\nexport class BufferBuilder {\n    constructor(buffer, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n    get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    get reservedLength() { return this.buffer.length / this.stride; }\n    get reservedByteLength() { return this.buffer.byteLength; }\n    // @ts-ignore\n    set(index, value) { return this; }\n    append(value) { return this.set(this.length, value); }\n    reserve(extra) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT));\n            }\n        }\n        return this;\n    }\n    flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    _resize(newLength) {\n        return this.buffer = memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\nBufferBuilder.prototype.offset = 0;\n/** @ignore */\nexport class DataBufferBuilder extends BufferBuilder {\n    last() { return this.get(this.length - 1); }\n    get(index) { return this.buffer[index]; }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Uint8Array(0)) {\n        super(data, 1 / 8);\n        this.numValid = 0;\n    }\n    get numInvalid() { return this.length - this.numValid; }\n    get(idx) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    set(idx, val) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |= (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    append(value) {\n        return this.set(this.length - 1, value);\n    }\n    set(index, value) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n/** @ignore */\nexport class WideBufferBuilder extends BufferBuilder {\n    get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint':\n                this.buffer64[index] = value;\n                break;\n            case 'number':\n                this.buffer[index * this.stride] = value;\n                break;\n            default: this.buffer.set(value, index * this.stride);\n        }\n        return this;\n    }\n    _resize(newLength) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport { strideForType } from './type';\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport class Builder {\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }) {\n        /**\n         * The number of values written to the `Builder` that haven't been flushed yet.\n         * @readonly\n         */\n        this.length = 0;\n        /**\n         * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n         * @readonly\n         */\n        this.finished = false;\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    static new(options) { }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughDOM(options) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    static throughIterable(options) {\n        return throughIterable(options);\n    }\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    static throughAsyncIterable(options) {\n        return throughAsyncIterable(options);\n    }\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    toVector() { return Vector.new(this.flush()); }\n    get ArrayType() { return this.type.ArrayType; }\n    get nullCount() { return this._nulls.numInvalid; }\n    get numChildren() { return this.children.length; }\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    get byteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    get reservedLength() {\n        return this._nulls.reservedLength;\n    }\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    get reservedByteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n    get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n    get values() { return this._values ? this._values.buffer : null; }\n    get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n    get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    append(value) { return this.set(this.length, value); }\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    isValid(value) { return this._isValid(value); }\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    set(index, value) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    setValue(index, value) { this._setValue(this, index, value); }\n    setValid(index, valid) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    getChildAt(index) {\n        return this.children[index] || null;\n    }\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    flush() {\n        const buffers = [];\n        const values = this._values;\n        const offsets = this._offsets;\n        const typeIds = this._typeIds;\n        const { length, nullCount } = this;\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        }\n        else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        }\n        else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n        const data = Data.new(this.type, 0, length, nullCount, buffers, this.children.map((child) => child.flush()));\n        this.clear();\n        return data;\n    }\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\nBuilder.prototype.length = 1;\nBuilder.prototype.stride = 1;\nBuilder.prototype.children = null;\nBuilder.prototype.finished = false;\nBuilder.prototype.nullValues = null;\nBuilder.prototype._isValid = () => true;\n/** @ignore */\nexport class FixedWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    setValue(index, value) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n/** @ignore */\nexport class VariableWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._pendingLength = 0;\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    setValue(index, value) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    setValid(index, isValid) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    flush() {\n        this._flush();\n        return super.flush();\n    }\n    finish() {\n        this._flush();\n        return super.finish();\n    }\n    _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n}\n/** @ignore */\nfunction throughIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n/** @ignore */\nfunction throughAsyncIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class BoolBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    setValue(index, value) {\n        this._values.set(index, +value);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../builder';\n/** @ignore */\nexport class NullBuilder extends Builder {\n    // @ts-ignore\n    setValue(index, value) { }\n    setValid(index, valid) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DateBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class DateDayBuilder extends DateBuilder {\n}\n/** @ignore */\nexport class DateMillisecondBuilder extends DateBuilder {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DecimalBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Dictionary } from '../type';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class DictionaryBuilder extends Builder {\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) });\n        this._nulls = null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls });\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null });\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n    get values() { return this.indices.values; }\n    get nullCount() { return this.indices.nullCount; }\n    get nullBitmap() { return this.indices.nullBitmap; }\n    get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    isValid(value) { return this.indices.isValid(value); }\n    setValid(index, valid) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    setValue(index, value) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary;\n        this.clear();\n        return data;\n    }\n    finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    valueToKey(val) {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FixedSizeBinaryBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d) {\n    if (d !== d) {\n        return 0x7E00;\n    } // NaN\n    f64[0] = d;\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        }\n        else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    }\n    else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    }\n    else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n    return sign | expo | sigf & 0xFFFF;\n}\n\n//# sourceMappingURL=math.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FloatBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class Float16Builder extends FloatBuilder {\n    setValue(index, value) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n/** @ignore */\nexport class Float32Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Float64Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toArrayBufferView } from './buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x, ...xs) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function () { return bignumToNumber(this); };\nBigNum.prototype.toString = function () { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function (hint = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n/** @ignore */\nfunction SignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(...args) { return BigNum.apply(this, args); }\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n/** @ignore */\nfunction bignumToNumber(bn) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n/** @ignore */\nexport let bignumToString;\n/** @ignore */\nexport let bignumToBigInt;\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = bignumToString;\n}\nelse {\n    bignumToBigInt = ((a) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a));\n    bignumToString = ((a) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n/** @ignore */\nfunction decimalToString(a) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n/** @ignore */\nexport class BN {\n    constructor(num, isSigned) {\n        return BN.new(num, isSigned);\n    }\n    /** @nocollapse */\n    static new(num, isSigned) {\n        switch (isSigned) {\n            case true: return new SignedBigNum(num);\n            case false: return new UnsignedBigNum(num);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new SignedBigNum(num);\n        }\n        if (num.byteLength === 16) {\n            return new DecimalBigNum(num);\n        }\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static signed(num) {\n        return new SignedBigNum(num);\n    }\n    /** @nocollapse */\n    static unsigned(num) {\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static decimal(num) {\n        return new DecimalBigNum(num);\n    }\n}\n\n//# sourceMappingURL=bn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntBuilder extends FixedWidthBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Int8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\n/** @ignore */\nexport class Uint8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\nconst toBigInt = ((memo) => (value) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimeBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimeSecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMillisecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMicrosecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeNanosecondBuilder extends TimeBuilder {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimestampBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimestampSecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMillisecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMicrosecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampNanosecondBuilder extends TimestampBuilder {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntervalBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class IntervalDayTimeBuilder extends IntervalBuilder {\n}\n/** @ignore */\nexport class IntervalYearMonthBuilder extends IntervalBuilder {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class BinaryBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    _flushPending(pending, pendingLength) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class Utf8Builder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, encodeUtf8(value));\n    }\n    // @ts-ignore\n    _flushPending(pending, pendingLength) { }\n}\nUtf8Builder.prototype._flushPending = BinaryBuilder.prototype._flushPending;\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\n/** @ignore */\nexport class Run {\n    get length() { return this._values.length; }\n    get(index) { return this._values[index]; }\n    clear() { this._values = null; return this; }\n    bind(values) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this;\n    }\n}\n\n//# sourceMappingURL=run.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\nclass Row {\n    constructor(parent, numKeys) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n    entries() { return this[Symbol.iterator](); }\n    has(key) { return this.get(key) !== undefined; }\n    get(key) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n            else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n    set(key, val) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n    clear() { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n    delete(_) { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n    *[Symbol.iterator]() {\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v, k, m) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n    toArray() { return [...this.values()]; }\n    toJSON() {\n        const obj = {};\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n    inspect() { return this.toString(); }\n    [kCustomInspect]() { return this.toString(); }\n    toString() {\n        const str = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n}\nRow[Symbol.toStringTag] = ((proto) => {\n    Object.defineProperties(proto, {\n        'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n        [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n        [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n    });\n    return proto[Symbol.toStringTag] = 'Row';\n})(Row.prototype);\nexport class MapRow extends Row {\n    constructor(slice) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    keys() {\n        return this[kParent].getChildAt(0)[Symbol.iterator]();\n    }\n    values() {\n        return this[kParent].getChildAt(1)[Symbol.iterator]();\n    }\n    getKey(idx) {\n        return this[kParent].getChildAt(0).get(idx);\n    }\n    getIndex(key) {\n        return this[kParent].getChildAt(0).indexOf(key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(1).get(index);\n    }\n    setValue(index, value) {\n        this[kParent].getChildAt(1).set(index, value);\n    }\n}\nexport class StructRow extends Row {\n    constructor(parent) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name;\n        }\n    }\n    *values() {\n        for (const field of this[kParent].type.children) {\n            yield this[field.name];\n        }\n    }\n    getKey(idx) {\n        return this[kParent].type.children[idx].name;\n    }\n    getIndex(key) {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(index).get(this[kRowIndex]);\n    }\n    setValue(index, value) {\n        return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n    }\n}\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null, set: null };\n    return (row) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key) => function () { return this.get(key); };\n        const setter = (key) => function (val) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row, key) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row, key, receiver) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row, key, val, receiver) {\n            switch (key) {\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return (row) => new Proxy(row, RowProxyHandler);\n})();\n\n//# sourceMappingURL=row.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n/** @ignore */\nexport function clampIndex(source, index, then) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\nlet tmp;\n/** @ignore */\nexport function clampRange(source, begin, end, then) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value) => value !== value;\n/** @ignore */\nexport function createElementComparator(search) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value) => value === search\n            : (value) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) {\n        return creatMapComparator(search);\n    }\n    // Compare Array-likes\n    if (Array.isArray(search)) {\n        return createArrayLikeComparator(search);\n    }\n    // Compare Vectors\n    if (search instanceof Vector) {\n        return createVectorComparator(search);\n    }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction creatMapComparator(lhs) {\n    let i = -1;\n    const comparators = [];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) {\n        return () => false;\n    }\n    const comparators = [];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n    return (rhs) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\nfunction compareArray(comparators, arr) {\n    const n = comparators.length;\n    if (arr.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareVector(comparators, vec) {\n    const n = comparators.length;\n    if (vec.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObject(comparators, obj, keys) {\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n\n//# sourceMappingURL=vector.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { clampRange } from '../util/vector';\nimport { DataType } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class Chunked extends AbstractVector {\n    constructor(type, chunks = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._nullCount = -1;\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n    /** @nocollapse */\n    static flatten(...vectors) {\n        return selectChunkArgs(Vector, vectors);\n    }\n    /** @nocollapse */\n    static concat(...vectors) {\n        const chunks = Chunked.flatten(...vectors);\n        return new Chunked(chunks[0].type, chunks);\n    }\n    get type() { return this._type; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get typeId() { return this._type.typeId; }\n    get VectorName() { return `Chunked<${this._type}>`; }\n    get data() {\n        return this._chunks[0] ? this._chunks[0].data : null;\n    }\n    get ArrayType() { return this._type.ArrayType; }\n    get numChildren() { return this._numChildren; }\n    get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    get byteLength() {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n    get indices() {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = this._chunks;\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices)));\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    get dictionary() {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary;\n        }\n        return null;\n    }\n    *[Symbol.iterator]() {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n    clone(chunks = this._chunks) {\n        return new Chunked(this._type, chunks);\n    }\n    concat(...others) {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n    slice(begin, end) {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this._numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let child, field, chunks;\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = (this._type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked(field.type, chunks));\n            }\n        }\n        return null;\n    }\n    search(index, then) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0) {\n            return null;\n        }\n        if (idx >= offsets[rhs]) {\n            return null;\n        }\n        if (rhs <= 1) {\n            return then ? then(this, 0, idx) : [0, idx];\n        }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n    isValid(index) {\n        return !!this.search(index, this.isValidInternal);\n    }\n    get(index) {\n        return this.search(index, this.getInternal);\n    }\n    set(index, value) {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n    indexOf(element, offset) {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element));\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n    toArray() {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType = this._type.ArrayType;\n        if (n <= 0) {\n            return new ArrayType(0);\n        }\n        if (n <= 1) {\n            return chunks[0].toArray();\n        }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n    getInternal({ _chunks }, i, j) { return _chunks[i].get(j); }\n    isValidInternal({ _chunks }, i, j) { return _chunks[i].isValid(j); }\n    indexOfInternal({ _chunks }, chunkIndex, fromIndex, element) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n    _sliceInternal(self, begin, end) {\n        const slices = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) {\n                break;\n            }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) {\n                continue;\n            }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to));\n        }\n        return self.clone(slices);\n    }\n}\n/** @ignore */\nfunction calculateOffsets(vectors) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n/** @ignore */\nconst typedSet = (src, dst, offset) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n/** @ignore */\nconst arraySet = (src, dst, offset) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n//# sourceMappingURL=chunked.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from './schema';\nimport { Vector } from './vector';\nimport { Chunked } from './vector/chunked';\nexport class Column extends Chunked {\n    constructor(field, vectors = [], offsets) {\n        vectors = Chunked.flatten(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n    /** @nocollapse */\n    static new(field, data, ...rest) {\n        const chunks = Chunked.flatten(Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n                [Vector.new(data, ...rest)]);\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        }\n        else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n    get field() { return this._field; }\n    get name() { return this._field.name; }\n    get nullable() { return this._field.nullable; }\n    get metadata() { return this._field.metadata; }\n    clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let column, field, chunks;\n        if (column = columns[index]) {\n            return column;\n        }\n        if (field = (this.type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass SingleChunkColumn extends Column {\n    constructor(field, vector, offsets) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    search(index, then) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    isValid(index) {\n        return this._chunk.isValid(index);\n    }\n    get(index) {\n        return this._chunk.get(index);\n    }\n    set(index, value) {\n        this._chunk.set(index, value);\n    }\n    indexOf(element, offset) {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n\n//# sourceMappingURL=column.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\nconst isArray = Array.isArray;\n/** @ignore */\nexport const selectArgs = (Ctor, vals) => _selectArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnArgs = (args) => {\n    const [fields, values] = _selectFieldArgs(args, [[], []]);\n    return values.map((x, i) => x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) :\n            Column.new(fields[i], []));\n};\n/** @ignore */\nexport const selectFieldArgs = (args) => _selectFieldArgs(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = (Ctor, vals) => _selectChunkArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectVectorChildrenArgs = (Ctor, vals) => _selectVectorChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnChildrenArgs = (Ctor, vals) => _selectColumnChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nfunction _selectArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectChunkArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectVectorChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)), res, j).length;\n        }\n        else if (value instanceof Vector) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectColumnChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i))), res, j).length;\n        }\n        else if (value instanceof Column) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nconst toKeysAndValues = (xs, [k, v], i) => (xs[0][i] = k, xs[1][i] = v, xs);\n/** @ignore */\nfunction _selectFieldArgs(vals, ret) {\n    let keys, n;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) {\n                return ret;\n            }\n            if (isArray(vals[0])) {\n                return _selectFieldArgs(vals[0], ret);\n            }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field;\n    let val;\n    let [fields, values] = ret;\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        }\n        else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val, true);\n            }\n            else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val));\n                fields[++fieldIndex] = Field.new(field, val.type, true);\n            }\n        }\n    }\n    return ret;\n}\n\n//# sourceMappingURL=args.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\nexport class Schema {\n    constructor(fields = [], metadata, dictionaries) {\n        this.fields = (fields || []);\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    /** @nocollapse */\n    static from(...args) {\n        return Schema.new(args[0], args[1]);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n    get [Symbol.toStringTag]() { return 'Schema'; }\n    toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n    compareTo(other) {\n        return comparer.compareSchemas(this, other);\n    }\n    select(...columnNames) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    selectAt(...columnIndices) {\n        return new Schema(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n    assign(...args) {\n        const other = args[0] instanceof Schema ? args[0]\n            : new Schema(selectArgs(Field, args));\n        const curFields = [...this.fields];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        });\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n        return new Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n    }\n}\nexport class Field {\n    constructor(name, type, nullable = false, metadata) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n    /** @nocollapse */\n    static new(...args) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field(`${name}`, type, nullable, metadata);\n    }\n    get typeId() { return this.type.typeId; }\n    get [Symbol.toStringTag]() { return 'Field'; }\n    toString() { return `${this.name}: ${this.type}`; }\n    compareTo(other) {\n        return comparer.compareField(this, other);\n    }\n    clone(...args) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new(name, type, nullable, metadata);\n    }\n}\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            }\n            else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nSchema.prototype.fields = null;\nSchema.prototype.metadata = null;\nSchema.prototype.dictionaries = null;\nField.prototype.type = null;\nField.prototype.name = null;\nField.prototype.nullable = null;\nField.prototype.metadata = null;\n\n//# sourceMappingURL=schema.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class ListBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._run = new Run();\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    _flushPending(pending) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { FixedSizeList } from '../type';\n/** @ignore */\nexport class FixedSizeListBuilder extends Builder {\n    constructor() {\n        super(...arguments);\n        this._run = new Run();\n    }\n    setValue(index, value) {\n        super.setValue(index, this._run.bind(value));\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Map_ } from '../type';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class MapBuilder extends VariableWidthBuilder {\n    set(index, value) {\n        return super.set(index, value);\n    }\n    setValue(index, value) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { Struct } from '../type';\n/** @ignore */\nexport class StructBuilder extends Builder {\n    addChild(child, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\nimport { Union } from '../type';\n/** @ignore */\nexport class UnionBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n    get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n    append(value, childTypeId) {\n        return this.set(this.length, value, childTypeId);\n    }\n    set(index, value, childTypeId) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n    // @ts-ignore\n    setValue(index, value, childTypeId) {\n        this._typeIds.set(index, childTypeId);\n        super.setValue(index, value);\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n    _valueToChildTypeId(builder, value, offset) {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n/** @ignore */\nexport class SparseUnionBuilder extends UnionBuilder {\n}\n/** @ignore */\nexport class DenseUnionBuilder extends UnionBuilder {\n    constructor(options) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n    /** @ignore */\n    setValue(index, value, childTypeId) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId];\n        this._offsets.set(index, this.getChildAt(childIndex).length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class SetVisitor extends Visitor {\n}\n/** @ignore */\nconst setEpochMsToDays = (data, index, epochMs) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nconst setDateDay = ({ values }, index, value) => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = ({ values }, index, value) => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric = ({ stride, values }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16 = ({ stride, values }, index, value) => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2 = (vector, index, value) => {\n    switch (typeof value) {\n        case 'bigint':\n            vector.values64[index] = value;\n            break;\n        case 'number':\n            vector.values[index * vector.stride] = value;\n            break;\n        default:\n            const val = value;\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = (vector, index, value) => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector, index, value)\n        : setNumericX2(vector, index, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = (vector, index, value) => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector, index, value)\n        : setFloat16(vector, index, value);\n};\n/* istanbul ignore next */\nconst setDate = (vector, index, value) => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector, index, value)\n        : setDateMillisecond(vector, index, value);\n};\n/** @ignore */\nconst setTimestampSecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = ({ values }, index, value) => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond = ({ values }, index, value) => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setTimeSecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setDecimal = ({ values }, index, value) => { values.set(value.subarray(0, 4), 4 * index); };\n/** @ignore */\nconst setList = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n/** @ignore */\nconst setMap = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (c, _, i) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (c, _, i) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (c, f, _) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (c, f, _) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = (vector, index, value) => {\n    const setValue = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    vector.type.children.forEach((f, i) => setValue(vector.getChildAt(i), f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (vector, index, value) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector, index, value) :\n        setSparseUnion(vector, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n/** @ignore */\nconst setDictionary = (vector, index, value) => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = (vector, index, value) => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector, index, value)\n        : setIntervalYearMonth(vector, index, value);\n};\n/** @ignore */\nconst setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\n/** @ignore */\nconst setFixedSizeList = (vector, index, value) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\nSetVisitor.prototype.visitBool = setBool;\nSetVisitor.prototype.visitInt = setInt;\nSetVisitor.prototype.visitInt8 = setNumeric;\nSetVisitor.prototype.visitInt16 = setNumeric;\nSetVisitor.prototype.visitInt32 = setNumeric;\nSetVisitor.prototype.visitInt64 = setNumericX2;\nSetVisitor.prototype.visitUint8 = setNumeric;\nSetVisitor.prototype.visitUint16 = setNumeric;\nSetVisitor.prototype.visitUint32 = setNumeric;\nSetVisitor.prototype.visitUint64 = setNumericX2;\nSetVisitor.prototype.visitFloat = setFloat;\nSetVisitor.prototype.visitFloat16 = setFloat16;\nSetVisitor.prototype.visitFloat32 = setNumeric;\nSetVisitor.prototype.visitFloat64 = setNumeric;\nSetVisitor.prototype.visitUtf8 = setUtf8;\nSetVisitor.prototype.visitBinary = setBinary;\nSetVisitor.prototype.visitFixedSizeBinary = setFixedSizeBinary;\nSetVisitor.prototype.visitDate = setDate;\nSetVisitor.prototype.visitDateDay = setDateDay;\nSetVisitor.prototype.visitDateMillisecond = setDateMillisecond;\nSetVisitor.prototype.visitTimestamp = setTimestamp;\nSetVisitor.prototype.visitTimestampSecond = setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond = setTimestampNanosecond;\nSetVisitor.prototype.visitTime = setTime;\nSetVisitor.prototype.visitTimeSecond = setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond = setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond = setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond = setTimeNanosecond;\nSetVisitor.prototype.visitDecimal = setDecimal;\nSetVisitor.prototype.visitList = setList;\nSetVisitor.prototype.visitStruct = setStruct;\nSetVisitor.prototype.visitUnion = setUnion;\nSetVisitor.prototype.visitDenseUnion = setDenseUnion;\nSetVisitor.prototype.visitSparseUnion = setSparseUnion;\nSetVisitor.prototype.visitDictionary = setDictionary;\nSetVisitor.prototype.visitInterval = setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime = setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth = setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList = setFixedSizeList;\nSetVisitor.prototype.visitMap = setMap;\n/** @ignore */\nexport const instance = new SetVisitor();\n\n//# sourceMappingURL=set.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    visitNull() { return NullBuilder; }\n    visitBool() { return BoolBuilder; }\n    visitInt() { return IntBuilder; }\n    visitInt8() { return Int8Builder; }\n    visitInt16() { return Int16Builder; }\n    visitInt32() { return Int32Builder; }\n    visitInt64() { return Int64Builder; }\n    visitUint8() { return Uint8Builder; }\n    visitUint16() { return Uint16Builder; }\n    visitUint32() { return Uint32Builder; }\n    visitUint64() { return Uint64Builder; }\n    visitFloat() { return FloatBuilder; }\n    visitFloat16() { return Float16Builder; }\n    visitFloat32() { return Float32Builder; }\n    visitFloat64() { return Float64Builder; }\n    visitUtf8() { return Utf8Builder; }\n    visitBinary() { return BinaryBuilder; }\n    visitFixedSizeBinary() { return FixedSizeBinaryBuilder; }\n    visitDate() { return DateBuilder; }\n    visitDateDay() { return DateDayBuilder; }\n    visitDateMillisecond() { return DateMillisecondBuilder; }\n    visitTimestamp() { return TimestampBuilder; }\n    visitTimestampSecond() { return TimestampSecondBuilder; }\n    visitTimestampMillisecond() { return TimestampMillisecondBuilder; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondBuilder; }\n    visitTimestampNanosecond() { return TimestampNanosecondBuilder; }\n    visitTime() { return TimeBuilder; }\n    visitTimeSecond() { return TimeSecondBuilder; }\n    visitTimeMillisecond() { return TimeMillisecondBuilder; }\n    visitTimeMicrosecond() { return TimeMicrosecondBuilder; }\n    visitTimeNanosecond() { return TimeNanosecondBuilder; }\n    visitDecimal() { return DecimalBuilder; }\n    visitList() { return ListBuilder; }\n    visitStruct() { return StructBuilder; }\n    visitUnion() { return UnionBuilder; }\n    visitDenseUnion() { return DenseUnionBuilder; }\n    visitSparseUnion() { return SparseUnionBuilder; }\n    visitDictionary() { return DictionaryBuilder; }\n    visitInterval() { return IntervalBuilder; }\n    visitIntervalDayTime() { return IntervalDayTimeBuilder; }\n    visitIntervalYearMonth() { return IntervalYearMonthBuilder; }\n    visitFixedSizeList() { return FixedSizeListBuilder; }\n    visitMap() { return MapBuilder; }\n}\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n\n//# sourceMappingURL=builderctor.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Footer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Footer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Footer= obj\n                     * @returns Footer\n                     */\n                    static getRootAsFooter(bb, obj) {\n                        return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.Schema= obj\n                     * @returns org.apache.arrow.flatbuf.Schema|null\n                     */\n                    schema(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    dictionaries(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    dictionariesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    recordBatches(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    recordBatchesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFooter(builder) {\n                        builder.startObject(4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset schemaOffset\n                     */\n                    static addSchema(builder, schemaOffset) {\n                        builder.addFieldOffset(1, schemaOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionariesOffset\n                     */\n                    static addDictionaries(builder, dictionariesOffset) {\n                        builder.addFieldOffset(2, dictionariesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startDictionariesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset recordBatchesOffset\n                     */\n                    static addRecordBatches(builder, recordBatchesOffset) {\n                        builder.addFieldOffset(3, recordBatchesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startRecordBatchesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFooter(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishFooterBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n                        Footer.startFooter(builder);\n                        Footer.addVersion(builder, version);\n                        Footer.addSchema(builder, schemaOffset);\n                        Footer.addDictionaries(builder, dictionariesOffset);\n                        Footer.addRecordBatches(builder, recordBatchesOffset);\n                        return Footer.endFooter(builder);\n                    }\n                }\n                flatbuf.Footer = Footer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Block {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Block\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * Index to the start of the RecordBlock (note this is past the Message header)\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * Length of the metadata\n                     *\n                     * @returns number\n                     */\n                    metaDataLength() {\n                        return this.bb.readInt32(this.bb_pos + 8);\n                    }\n                    /**\n                     * Length of the data (this is aligned so there can be a gap between this and\n                     * the metatdata).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        return this.bb.readInt64(this.bb_pos + 16);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param number metaDataLength\n                     * @param flatbuffers.Long bodyLength\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBlock(builder, offset, metaDataLength, bodyLength) {\n                        builder.prep(8, 24);\n                        builder.writeInt64(bodyLength);\n                        builder.pad(4);\n                        builder.writeInt32(metaDataLength);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Block = Block;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=File.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport { Builder } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\nimport { Type } from '../enum';\nimport { Utf8Builder } from './utf8';\nimport { Builder } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n/** @nocollapse */\nBuilder.new = newBuilder;\nfunction newBuilder(options) {\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn(type)())(options);\n    if (type.children && type.children.length > 0) {\n        const children = options['children'] || [];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_, i) => children[i] || defaultOptions)\n            : (({ name }) => children[name] || defaultOptions);\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n    return builder;\n}\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n    const BuilderCtor = getBuilderConstructor.visit(typeId);\n    BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n});\nUtf8Builder.prototype._setValue = setVisitor.visitBinary;\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* tslint:disable:class-name */\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar _Block = File_.org.apache.arrow.flatbuf.Block;\nvar _Footer = File_.org.apache.arrow.flatbuf.Footer;\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\n/** @ignore */\nclass Footer_ {\n    constructor(schema, version = MetadataVersion.V4, recordBatches, dictionaryBatches) {\n        this.schema = schema;\n        this.version = version;\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema());\n        return new OffHeapFooter(schema, footer);\n    }\n    /** @nocollapse */\n    static encode(footer) {\n        const b = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n        const dictionaryBatchesOffset = b.endVector();\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n        return b.asUint8Array();\n    }\n    get numRecordBatches() { return this._recordBatches.length; }\n    get numDictionaries() { return this._dictionaryBatches.length; }\n    *recordBatches() {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    *dictionaryBatches() {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    getRecordBatch(index) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n    getDictionaryBatch(index) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\nexport { Footer_ as Footer };\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n    constructor(schema, _footer) {\n        super(schema, _footer.version());\n        this._footer = _footer;\n    }\n    get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    get numDictionaries() { return this._footer.dictionariesLength(); }\n    getRecordBatch(index) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n    getDictionaryBatch(index) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nexport class FileBlock {\n    /** @nocollapse */\n    static decode(block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n    /** @nocollapse */\n    static encode(b, fileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n    constructor(metaDataLength, bodyLength, offset) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays } from '../util/buffer';\nimport { isPromise, isFetchResponse, isIterable, isAsyncIterable, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\n/** @ignore */\nexport class AsyncByteQueue extends AsyncQueue {\n    write(value) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value);\n        }\n    }\n    toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values)[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n/** @ignore */\nexport class ByteStream {\n    constructor(source) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nexport class AsyncByteStream {\n    constructor(source) {\n        if (source instanceof AsyncByteStream) {\n            this.source = source.source;\n        }\n        else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        }\n        else if (isReadableDOMStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        }\n        else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body));\n        }\n        else if (isIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        }\n        else if (isPromise(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isAsyncIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    get closed() { return this.source.closed; }\n    cancel(reason) { return this.source.cancel(reason); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nclass ByteStreamSource {\n    constructor(source) {\n        this.source = source;\n    }\n    cancel(reason) { this.return(reason); }\n    peek(size) { return this.next(size, 'peek').value; }\n    read(size) { return this.next(size, 'read').value; }\n    next(size, cmd = 'read') { return this.source.next({ cmd, size }); }\n    throw(value) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    return(value) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n/** @ignore */\nclass AsyncByteStreamSource {\n    constructor(source) {\n        this.source = source;\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    async cancel(reason) { await this.return(reason); }\n    get closed() { return this._closedPromise; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    async next(size, cmd = 'read') { return (await this.source.next({ cmd, size })); }\n    async throw(value) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    async return(value) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n\n//# sourceMappingURL=stream.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { toUint8Array } from '../util/buffer';\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    constructor(buffer, byteLength) {\n        super();\n        this.position = 0;\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    readInt32(position) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    seek(position) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    read(nBytes) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            this.position = Math.min(size, position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    readAt(position, nBytes) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    close() { this.buffer && (this.buffer = null); }\n    throw(value) { this.close(); return { done: true, value }; }\n    return(value) { this.close(); return { done: true, value }; }\n}\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    constructor(file, byteLength) {\n        super();\n        this.position = 0;\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        }\n        else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    async readInt32(position) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    async seek(position) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    async read(nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    async readAt(position, nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    async throw(value) { await this.close(); return { done: true, value }; }\n    async return(value) { await this.close(); return { done: true, value }; }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000];\n/** @ignore */\nexport class BaseInt64 {\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    high() { return this.buffer[1]; }\n    low() { return this.buffer[0]; }\n    _times(other) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n        let sum = product >>> 16;\n        product = L[2] * R[3];\n        sum += product;\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n        this.buffer[0] += sum << 16;\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n        return this;\n    }\n    _plus(other) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n    lessThan(other) {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n    equals(other) {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n    greaterThan(other) {\n        return other.lessThan(this);\n    }\n    hex() {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Uint64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        const length = str.length;\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        return this;\n    }\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    lessThan(other) {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Int64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int128 {\n    constructor(buffer) {\n        this.buffer = buffer;\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n    high() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n    low() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        if (this.buffer[1] == 0) {\n            ++this.buffer[2];\n        }\n        if (this.buffer[2] == 0) {\n            ++this.buffer[3];\n        }\n        return this;\n    }\n    times(other) {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n        this.buffer[1] = sum.low();\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n        return this;\n    }\n    plus(other) {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n        return this;\n    }\n    hex() {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(4)) {\n        return Int128.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(4)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(4)) {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    constructor(bytes, nodes, buffers, dictionaries) {\n        super();\n        this.nodesIndex = -1;\n        this.buffersIndex = -1;\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n    visit(node) {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n    visitNull(type, { length, } = this.nextFieldNode()) { return Data.Null(type, 0, length); }\n    visitBool(type, { length, nullCount } = this.nextFieldNode()) { return Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitInt(type, { length, nullCount } = this.nextFieldNode()) { return Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFloat(type, { length, nullCount } = this.nextFieldNode()) { return Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitUtf8(type, { length, nullCount } = this.nextFieldNode()) { return Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitFixedSizeBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDate(type, { length, nullCount } = this.nextFieldNode()) { return Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTimestamp(type, { length, nullCount } = this.nextFieldNode()) { return Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTime(type, { length, nullCount } = this.nextFieldNode()) { return Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDecimal(type, { length, nullCount } = this.nextFieldNode()) { return Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitList(type, { length, nullCount } = this.nextFieldNode()) { return Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    visitStruct(type, { length, nullCount } = this.nextFieldNode()) { return Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children)); }\n    visitUnion(type) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type); }\n    visitDenseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    visitSparseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children)); }\n    visitDictionary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type)); }\n    visitInterval(type, { length, nullCount } = this.nextFieldNode()) { return Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFixedSizeList(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0])); }\n    visitMap(type, { length, nullCount } = this.nextFieldNode()) { return Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    readNullBitmap(type, nullCount, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    readOffsets(type, buffer) { return this.readData(type, buffer); }\n    readTypeIds(type, buffer) { return this.readData(type, buffer); }\n    readData(_type, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    readDictionary(type) {\n        return this.dictionaries.get(type.id);\n    }\n}\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    constructor(sources, nodes, buffers, dictionaries) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    readNullBitmap(_type, nullCount, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    readOffsets(_type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    readTypeIds(type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    readData(type, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset]));\n        }\n        else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset]);\n        }\n        else if (DataType.isBool(type)) {\n            return packBools(sources[offset]);\n        }\n        else if (DataType.isUtf8(type)) {\n            return encodeUtf8(sources[offset].join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n\n//# sourceMappingURL=vectorloader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nimport * as Schema_ from '../fb/Schema';\nimport { Visitor } from '../visitor';\nvar Null = Schema_.org.apache.arrow.flatbuf.Null;\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nvar Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nvar Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nvar Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nvar Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nvar Date = Schema_.org.apache.arrow.flatbuf.Date;\nvar Time = Schema_.org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nvar List = Schema_.org.apache.arrow.flatbuf.List;\nvar Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_.org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nvar FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n/** @ignore */\nexport const instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Schema, Field } from '../../schema';\nimport { Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n/** @ignore */\nexport function schemaFromJSON(_schema, dictionaries = new Map()) {\n    return new Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\n/** @ignore */\nexport function recordBatchFromJSON(b) {\n    return new RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\n/** @ignore */\nexport function dictionaryBatchFromJSON(b) {\n    return new DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n    return (_schema['fields'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n    return (_field['children'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n    return (xs || []).reduce((fieldNodes, column) => [\n        ...fieldNodes,\n        new FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])),\n        ...fieldNodesFromJSON(column['children'])\n    ], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs, buffers = []) {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nexport function fieldFromJSON(_field, dictionaries) {\n    let id;\n    let keys;\n    let field;\n    let dictMeta;\n    let type;\n    let dictType;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n    return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n    const typeId = f['type']['name'];\n    switch (typeId) {\n        case 'NONE': return new Null();\n        case 'null': return new Null();\n        case 'binary': return new Binary();\n        case 'utf8': return new Utf8();\n        case 'bool': return new Bool();\n        case 'list': return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth']);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']]);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']]);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']], t['bitWidth']);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']], t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']]);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']], (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n\n//# sourceMappingURL=json.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar Type = Schema_.org.apache.arrow.flatbuf.Type;\nvar _Field = Schema_.org.apache.arrow.flatbuf.Field;\nvar _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nvar _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nvar _Message = Message_.org.apache.arrow.flatbuf.Message;\nvar _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nvar _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nvar _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nvar _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nvar _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport { DataType, Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\n/**\n * @ignore\n * @private\n **/\nexport class Message {\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === MessageHeader.DictionaryBatch; }\n}\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    constructor(offset, length) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    constructor(length, nullCount) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema()));\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case Type.NONE: return new Null();\n        case Type.Null: return new Null();\n        case Type.Binary: return new Binary();\n        case Type.Utf8: return new Utf8();\n        case Type.Bool: return new Bool();\n        case Type.List: return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int());\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint());\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal());\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date());\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time());\n            return new Time(t.unit(), t.bitWidth());\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp());\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval());\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union());\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary());\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList());\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map());\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n    if (metadataOffset !== -1) {\n        _Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    let type = field.type;\n    let typeId = field.typeId;\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b);\n        typeOffset = typeAssembler.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        _Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        _Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        _Field.addCustomMetadata(b, metadataOffset);\n    }\n    return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n    const nodesVectorOffset = b.endVector();\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n    const buffersVectorOffset = b.endVector();\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = (function () {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ITERATOR_DONE } from '../io/interfaces';\n/** @ignore */ const invalidMessageType = (type) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected, actual) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected, actual) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n/** @ignore */\nexport class MessageReader {\n    constructor(source) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        let r;\n        if ((r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    readMetadataLength() {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    readMetadata(metadataLength) {\n        const buf = this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class AsyncMessageReader {\n    constructor(source, byteLength) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n                ? new AsyncRandomAccessFile(source, byteLength)\n                : new AsyncByteStream(source);\n    }\n    [Symbol.asyncIterator]() { return this; }\n    async next() {\n        let r;\n        if ((r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = await this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    async throw(value) { return await this.source.throw(value); }\n    async return(value) { return await this.source.return(value); }\n    async readMessage(type) {\n        let r;\n        if ((r = await this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    async readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    async readMetadataLength() {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    async readMetadata(metadataLength) {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    constructor(source) {\n        super(new Uint8Array(0));\n        this._schema = false;\n        this._body = [];\n        this._batchIndex = 0;\n        this._dictionaryIndex = 0;\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    readMessageBody(_bodyLength) {\n        return flattenDataSources(this._body);\n        function flattenDataSources(xs) {\n            return (xs || []).reduce((buffers, column) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], []);\n        }\n    }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n/** @ignore */\nexport function checkForMagicArrowString(buffer, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport { DataType, } from '../type';\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n    constructor() {\n        super();\n        this._byteLength = 0;\n        this._nodes = [];\n        this._buffers = [];\n        this._bufferRegions = [];\n    }\n    /** @nocollapse */\n    static assemble(...args) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n    visit(vector) {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap));\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n    visitNull(_nullV) {\n        return this;\n    }\n    visitDictionary(vector) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n    get nodes() { return this._nodes; }\n    get buffers() { return this._buffers; }\n    get byteLength() { return this._byteLength; }\n    get bufferRegions() { return this._bufferRegions; }\n}\n/** @ignore */\nfunction addBuffer(values) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n/** @ignore */\nfunction assembleUnion(vector) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    }\n    else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        }\n        else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n/** @ignore */\nfunction assembleBoolVector(vector) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    }\n    else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n/** @ignore */\nfunction assembleFlatVector(vector) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n/** @ignore */\nfunction assembleFlatListVector(vector) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n/** @ignore */\nfunction assembleListVector(vector) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0));\n}\n/** @ignore */\nfunction assembleNestedVector(vector) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)).filter(Boolean))[0];\n}\nVectorAssembler.prototype.visitBool = assembleBoolVector;\nVectorAssembler.prototype.visitInt = assembleFlatVector;\nVectorAssembler.prototype.visitFloat = assembleFlatVector;\nVectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nVectorAssembler.prototype.visitDate = assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nVectorAssembler.prototype.visitTime = assembleFlatVector;\nVectorAssembler.prototype.visitDecimal = assembleFlatVector;\nVectorAssembler.prototype.visitList = assembleListVector;\nVectorAssembler.prototype.visitStruct = assembleNestedVector;\nVectorAssembler.prototype.visitUnion = assembleUnion;\nVectorAssembler.prototype.visitInterval = assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nVectorAssembler.prototype.visitMap = assembleListVector;\n\n//# sourceMappingURL=vectorassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ReadableInterop } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\nexport class RecordBatchWriter extends ReadableInterop {\n    constructor(options) {\n        super();\n        this._position = 0;\n        this._started = false;\n        // @ts-ignore\n        this._sink = new AsyncByteQueue();\n        this._schema = null;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    toString(sync = false) {\n        return this._sink.toString(sync);\n    }\n    toUint8Array(sync = false) {\n        return this._sink.toUint8Array(sync);\n    }\n    writeAll(input) {\n        if (isPromise(input)) {\n            return input.then((x) => this.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, input);\n    }\n    get closed() { return this._sink.closed; }\n    [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    toDOMStream(options) { return this._sink.toDOMStream(options); }\n    toNodeStream(options) { return this._sink.toNodeStream(options); }\n    close() {\n        return this.reset()._sink.close();\n    }\n    abort(reason) {\n        return this.reset()._sink.abort(reason);\n    }\n    finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    reset(sink = this._sink, schema = null) {\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink;\n        }\n        else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            }\n            else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            }\n            else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n        return this;\n    }\n    write(payload) {\n        let schema = null;\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        }\n        else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        }\n        else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        }\n        else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n    _writeMessage(message, alignment = 8) {\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) {\n            this._write(buffer);\n        }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n    _write(chunk) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n    _writeSchema(schema) {\n        return this._writeMessage(Message.from(schema));\n    }\n    // @ts-ignore\n    _writeFooter(schema) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n    _writeMagic() {\n        return this._write(MAGIC);\n    }\n    _writePadding(nBytes) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n    _writeRecordBatch(batch) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeBodyBuffers(buffers) {\n        let buffer;\n        let size, padding;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n    _writeDictionaries(batch) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? dictionary.chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n/** @ignore */\nexport class RecordBatchStreamWriter extends RecordBatchWriter {\n    /** @nocollapse */\n    static writeAll(input, options) {\n        const writer = new RecordBatchStreamWriter(options);\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n/** @ignore */\nexport class RecordBatchFileWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        const writer = new RecordBatchFileWriter();\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n    // @ts-ignore\n    _writeSchema(schema) {\n        return this._writeMagic()._writePadding(2);\n    }\n    _writeFooter(schema) {\n        const buffer = Footer.encode(new Footer(schema, MetadataVersion.V4, this._recordBatchBlocks, this._dictionaryBlocks));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n/** @ignore */\nexport class RecordBatchJSONWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        return new RecordBatchJSONWriter().writeAll(input);\n    }\n    _writeMessage() { return this; }\n    // @ts-ignore\n    _writeFooter(schema) { return this; }\n    _writeSchema(schema) {\n        return this._write(`{\\n  \"schema\": ${JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)}`);\n    }\n    _writeDictionaries(batch) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    _writeRecordBatch(batch) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    close() {\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n        this._dictionaries = [];\n        this._recordBatches = [];\n        return super.close();\n    }\n}\n/** @ignore */\nfunction writeAll(writer, input) {\n    let chunks = input;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nasync function writeAllAsync(writer, batches) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }) {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary, id, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n/** @ignore */\nfunction recordBatchToJSON(records) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n\n//# sourceMappingURL=writer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Schema } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength) => [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n];\n/** @ignore */\nexport function ensureSameLengthData(schema, chunks, batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)) {\n    let data;\n    let field;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }));\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return [new Schema(fields), batchLength, batchData];\n}\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches(columns) {\n    return distributeVectorsIntoRecordBatches(new Schema(columns.map(({ field }) => field)), columns);\n}\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches(schema, vecs) {\n    return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, columns) {\n    const fields = [...schema.fields];\n    const batchArgs = [];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n    let numBatches = 0, batchLength = 0;\n    let i = -1, numColumns = columns.length;\n    let child, childData = [];\n    while (memo.numBatches-- > 0) {\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift();\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n/** @ignore */\nfunction distributeChildData(fields, batchLength, childData, columns, memo) {\n    let data;\n    let field;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            }\n            else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }));\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return childData;\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class BaseVector extends AbstractVector {\n    constructor(data, children) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n    get type() { return this.data.type; }\n    get typeId() { return this.data.typeId; }\n    get length() { return this.data.length; }\n    get offset() { return this.data.offset; }\n    get stride() { return this.data.stride; }\n    get nullCount() { return this.data.nullCount; }\n    get byteLength() { return this.data.byteLength; }\n    get VectorName() { return `${Type[this.typeId]}Vector`; }\n    get ArrayType() { return this.type.ArrayType; }\n    get values() { return this.data.values; }\n    get typeIds() { return this.data.typeIds; }\n    get nullBitmap() { return this.data.nullBitmap; }\n    get valueOffsets() { return this.data.valueOffsets; }\n    get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n    clone(data, children = this._children) {\n        return Vector.new(data, children);\n    }\n    concat(...others) {\n        return Chunked.concat(this, ...others);\n    }\n    slice(begin, end) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    isValid(index) {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n    getChildAt(index) {\n        return index < 0 || index >= this.numChildren ? null : ((this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new(this.data.childData[index])));\n    }\n    toJSON() { return [...this]; }\n    _sliceInternal(self, begin, end) {\n        return self.clone(self.data.slice(begin, end - begin), null);\n    }\n    // @ts-ignore\n    _bindDataAccessors(data) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\nBaseVector.prototype[Symbol.isConcatSpreadable] = true;\n\n//# sourceMappingURL=base.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Utf8 } from '../type';\n/** @ignore */\nexport class BinaryVector extends BaseVector {\n    asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Bool } from '../type';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class BoolVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DateUnit } from '../enum';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { DateDay, DateMillisecond } from '../type';\n/** @ignore */\nexport class DateVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond(), args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond(), args[0]);\n    }\n}\n/** @ignore */\nexport class DateDayVector extends DateVector {\n}\n/** @ignore */\nexport class DateMillisecondVector extends DateVector {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class DecimalVector extends BaseVector {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Dictionary } from '../type';\n/** @ignore */\nexport class DictionaryVector extends BaseVector {\n    constructor(data) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n    get dictionary() { return this.data.dictionary; }\n    reverseLookup(value) { return this.dictionary.indexOf(value); }\n    getKey(idx) { return this.indices.get(idx); }\n    getValue(key) { return this.dictionary.get(key); }\n    setKey(idx, key) { return this.indices.set(idx, key); }\n    setValue(key, value) { return this.dictionary.set(key, value); }\n}\nDictionaryVector.prototype.indices = null;\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeListVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Float16, Float32, Float64 } from '../type';\n/** @ignore */\nexport class FloatVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        let ArrowType = vectorTypeToDataType(this);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input));\n                }\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n/** @ignore */\nexport class Float16Vector extends FloatVector {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    toFloat32Array() { return new Float32Array(this); }\n    toFloat64Array() { return new Float64Array(this); }\n}\n/** @ignore */\nexport class Float32Vector extends FloatVector {\n}\n/** @ignore */\nexport class Float64Vector extends FloatVector {\n}\nconst convertTo16Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Uint16Array: return Float16;\n        case Float32Array: return Float32;\n        case Float64Array: return Float64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class IntervalVector extends BaseVector {\n}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector {\n}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64 } from '../type';\n/** @ignore */\nexport class IntVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input));\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n/** @ignore */\nexport class Int8Vector extends IntVector {\n}\n/** @ignore */\nexport class Int16Vector extends IntVector {\n}\n/** @ignore */\nexport class Int32Vector extends IntVector {\n}\n/** @ignore */\nexport class Int64Vector extends IntVector {\n    toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n/** @ignore */\nexport class Uint8Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint16Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint32Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint64Vector extends IntVector {\n    toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\nconst convert32To64Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n        (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Array: return Int8;\n        case Int16Array: return Int16;\n        case Int32Array: return is64bit ? Int64 : Int32;\n        case BigInt64Array: return Int64;\n        case Uint8Array: return Uint8;\n        case Uint16Array: return Uint16;\n        case Uint32Array: return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Vector: return Int8;\n        case Int16Vector: return Int16;\n        case Int32Vector: return is64bit ? Int64 : Int32;\n        case Int64Vector: return Int64;\n        case Uint8Vector: return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class ListVector extends BaseVector {\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MapRow } from './row';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { List } from '../type';\n/** @ignore */\nexport class MapVector extends BaseVector {\n    asList() {\n        const child = this.type.children[0];\n        return Vector.new(this.data.clone(new List(child)));\n    }\n    bind(index) {\n        const child = this.getChildAt(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child.slice(begin, end));\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class NullVector extends BaseVector {\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector extends BaseVector {\n    bind(index) {\n        const proto = this._row || (this._row = new StructRow(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimestampVector extends BaseVector {\n}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimeVector extends BaseVector {\n}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class UnionVector extends BaseVector {\n    get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n/** @ignore */\nexport class DenseUnionVector extends UnionVector {\n    get valueOffsets() { return this.data.valueOffsets; }\n}\n/** @ignore */\nexport class SparseUnionVector extends UnionVector {\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class Utf8Vector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function partial0(visit) {\n    return function () { return visit(this); };\n}\n/** @ignore */\nexport function partial1(visit) {\n    return function (a) { return visit(this, a); };\n}\n/** @ignore */\nexport function partial2(visit) {\n    return function (a, b) { return visit(this, a, b); };\n}\n\n//# sourceMappingURL=fn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { uint16ToFloat64 } from '../util/math';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class GetVisitor extends Visitor {\n}\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_vector, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null;\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ stride, values, type }, index) => BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = (vector, index) => (vector.type.bitWidth < 64\n    ? getNumeric(vector, index)\n    : getBigInts(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = (vector, index) => (vector.type.precision !== Precision.HALF\n    ? getNumeric(vector, index)\n    : getFloat16(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (vector, index) => (vector.type.unit === DateUnit.DAY\n    ? getDateDay(vector, index)\n    : getDateMillisecond(vector, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimestampSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimestampNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimeSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimeNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values }, index) => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n/** @ignore */\nconst getList = (vector, index) => {\n    const child = vector.getChildAt(0), { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]);\n};\n/** @ignore */\nconst getMap = (vector, index) => {\n    return vector.bind(index);\n};\n/** @ignore */\nconst getStruct = (vector, index) => {\n    return vector.bind(index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (vector, index) => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector, index) :\n        getSparseUnion(vector, index);\n};\n/** @ignore */\nconst getDenseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n/** @ignore */\nconst getSparseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n/** @ignore */\nconst getDictionary = (vector, index) => {\n    return vector.getValue(vector.getKey(index));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (vector, index) => (vector.type.unit === IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(vector, index)\n    : getIntervalYearMonth(vector, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (vector, index) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride);\n};\nGetVisitor.prototype.visitNull = getNull;\nGetVisitor.prototype.visitBool = getBool;\nGetVisitor.prototype.visitInt = getInt;\nGetVisitor.prototype.visitInt8 = getNumeric;\nGetVisitor.prototype.visitInt16 = getNumeric;\nGetVisitor.prototype.visitInt32 = getNumeric;\nGetVisitor.prototype.visitInt64 = getBigInts;\nGetVisitor.prototype.visitUint8 = getNumeric;\nGetVisitor.prototype.visitUint16 = getNumeric;\nGetVisitor.prototype.visitUint32 = getNumeric;\nGetVisitor.prototype.visitUint64 = getBigInts;\nGetVisitor.prototype.visitFloat = getFloat;\nGetVisitor.prototype.visitFloat16 = getFloat16;\nGetVisitor.prototype.visitFloat32 = getNumeric;\nGetVisitor.prototype.visitFloat64 = getNumeric;\nGetVisitor.prototype.visitUtf8 = getUtf8;\nGetVisitor.prototype.visitBinary = getBinary;\nGetVisitor.prototype.visitFixedSizeBinary = getFixedSizeBinary;\nGetVisitor.prototype.visitDate = getDate;\nGetVisitor.prototype.visitDateDay = getDateDay;\nGetVisitor.prototype.visitDateMillisecond = getDateMillisecond;\nGetVisitor.prototype.visitTimestamp = getTimestamp;\nGetVisitor.prototype.visitTimestampSecond = getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond = getTimestampNanosecond;\nGetVisitor.prototype.visitTime = getTime;\nGetVisitor.prototype.visitTimeSecond = getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond = getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond = getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond = getTimeNanosecond;\nGetVisitor.prototype.visitDecimal = getDecimal;\nGetVisitor.prototype.visitList = getList;\nGetVisitor.prototype.visitStruct = getStruct;\nGetVisitor.prototype.visitUnion = getUnion;\nGetVisitor.prototype.visitDenseUnion = getDenseUnion;\nGetVisitor.prototype.visitSparseUnion = getSparseUnion;\nGetVisitor.prototype.visitDictionary = getDictionary;\nGetVisitor.prototype.visitInterval = getInterval;\nGetVisitor.prototype.visitIntervalDayTime = getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth = getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList = getFixedSizeList;\nGetVisitor.prototype.visitMap = getMap;\n/** @ignore */\nexport const instance = new GetVisitor();\n\n//# sourceMappingURL=get.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullIndexOf(vector, searchElement) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(vector, fromIndex) {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) {\n            return i;\n        }\n        ++i;\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfValue(vector, searchElement, fromIndex) {\n    if (searchElement === undefined) {\n        return -1;\n    }\n    if (searchElement === null) {\n        return indexOfNull(vector, fromIndex);\n    }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfUnion(vector, searchElement, fromIndex) {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n\n//# sourceMappingURL=indexof.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\n/** @ignore */\nexport class IteratorVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullableIterator(vector) {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits(vector.nullBitmap, vector.offset, vector.length, vector, (vec, idx, nullByte, nullBit) => ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null);\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator(vector);\n    }\n    const { type, typeId, length } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && ((typeId === Type.Timestamp) ||\n        (typeId === Type.Int && type.bitWidth !== 64) ||\n        (typeId === Type.Time && type.bitWidth !== 64) ||\n        (typeId === Type.Float && type.precision > 0 /* Precision.HALF */))) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexport const instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { instance as iteratorVisitor } from './iterator';\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {\n}\n/** @ignore */\nfunction arrayOfVector(vector) {\n    const { type, length, stride } = vector;\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float:\n        case Type.Decimal:\n        case Type.Time:\n        case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)];\n}\nToArrayVisitor.prototype.visitNull = arrayOfVector;\nToArrayVisitor.prototype.visitBool = arrayOfVector;\nToArrayVisitor.prototype.visitInt = arrayOfVector;\nToArrayVisitor.prototype.visitInt8 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16 = arrayOfVector;\nToArrayVisitor.prototype.visitInt32 = arrayOfVector;\nToArrayVisitor.prototype.visitInt64 = arrayOfVector;\nToArrayVisitor.prototype.visitUint8 = arrayOfVector;\nToArrayVisitor.prototype.visitUint16 = arrayOfVector;\nToArrayVisitor.prototype.visitUint32 = arrayOfVector;\nToArrayVisitor.prototype.visitUint64 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64 = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary = arrayOfVector;\nToArrayVisitor.prototype.visitDate = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTime = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal = arrayOfVector;\nToArrayVisitor.prototype.visitList = arrayOfVector;\nToArrayVisitor.prototype.visitStruct = arrayOfVector;\nToArrayVisitor.prototype.visitUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary = arrayOfVector;\nToArrayVisitor.prototype.visitInterval = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList = arrayOfVector;\nToArrayVisitor.prototype.visitMap = arrayOfVector;\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n\n//# sourceMappingURL=toarray.mjs.map\n","/* istanbul ignore file */\nimport { Visitor } from '../visitor';\nimport { TimeUnit } from '../enum';\n/** @ignore */ const sum = (x, y) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type) => `Cannot compute the byte width of variable-width column ${type}`;\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    visitNull(____) { return 0; }\n    visitInt(type) { return type.bitWidth / 8; }\n    visitFloat(type) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    visitBinary(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitUtf8(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitBool(____) { return 1 / 8; }\n    visitDecimal(____) { return 16; }\n    visitDate(type) { return (type.unit + 1) * 4; }\n    visitTime(type) { return type.bitWidth / 8; }\n    visitTimestamp(type) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    visitInterval(type) { return (type.unit + 1) * 4; }\n    visitList(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitStruct(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitUnion(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitFixedSizeBinary(type) { return type.byteWidth; }\n    visitFixedSizeList(type) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    visitMap(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitDictionary(type) { return this.visit(type.indices); }\n    visitFields(fields) { return (fields || []).map((field) => this.visit(field.type)); }\n    visitSchema(schema) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n\n//# sourceMappingURL=bytewidth.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    visitNull() { return NullVector; }\n    visitBool() { return BoolVector; }\n    visitInt() { return IntVector; }\n    visitInt8() { return Int8Vector; }\n    visitInt16() { return Int16Vector; }\n    visitInt32() { return Int32Vector; }\n    visitInt64() { return Int64Vector; }\n    visitUint8() { return Uint8Vector; }\n    visitUint16() { return Uint16Vector; }\n    visitUint32() { return Uint32Vector; }\n    visitUint64() { return Uint64Vector; }\n    visitFloat() { return FloatVector; }\n    visitFloat16() { return Float16Vector; }\n    visitFloat32() { return Float32Vector; }\n    visitFloat64() { return Float64Vector; }\n    visitUtf8() { return Utf8Vector; }\n    visitBinary() { return BinaryVector; }\n    visitFixedSizeBinary() { return FixedSizeBinaryVector; }\n    visitDate() { return DateVector; }\n    visitDateDay() { return DateDayVector; }\n    visitDateMillisecond() { return DateMillisecondVector; }\n    visitTimestamp() { return TimestampVector; }\n    visitTimestampSecond() { return TimestampSecondVector; }\n    visitTimestampMillisecond() { return TimestampMillisecondVector; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondVector; }\n    visitTimestampNanosecond() { return TimestampNanosecondVector; }\n    visitTime() { return TimeVector; }\n    visitTimeSecond() { return TimeSecondVector; }\n    visitTimeMillisecond() { return TimeMillisecondVector; }\n    visitTimeMicrosecond() { return TimeMicrosecondVector; }\n    visitTimeNanosecond() { return TimeNanosecondVector; }\n    visitDecimal() { return DecimalVector; }\n    visitList() { return ListVector; }\n    visitStruct() { return StructVector; }\n    visitUnion() { return UnionVector; }\n    visitDenseUnion() { return DenseUnionVector; }\n    visitSparseUnion() { return SparseUnionVector; }\n    visitDictionary() { return DictionaryVector; }\n    visitInterval() { return IntervalVector; }\n    visitIntervalDayTime() { return IntervalDayTimeVector; }\n    visitIntervalYearMonth() { return IntervalYearMonthVector; }\n    visitFixedSizeList() { return FixedSizeListVector; }\n    visitMap() { return MapVector; }\n}\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n\n//# sourceMappingURL=vectorctor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\nimport * as fn from '../util/fn';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder } from '../builder';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n/** @nocollapse */\nVector.new = newVector;\n/** @nocollapse */\nVector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data, ...args) {\n    return new (getVectorConstructor.getVisitFn(data)())(data, ...args);\n}\n/** @ignore */\nexport function vectorFromValuesWithType(newDataType, input) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    const { 'values': values = [], 'type': type = newDataType(), 'nullValues': nullValues = [null, undefined], } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type })\n        : Vector.from({ nullValues, ...input, type });\n}\nfunction vectorFrom(input) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input };\n    if (isIterable(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    }\n    return (async (chunks) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    })([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nBaseVector.prototype.get = function baseVectorGet(index) {\n    return getVisitor.visit(this, index);\n};\nBaseVector.prototype.set = function baseVectorSet(index, value) {\n    return setVisitor.visit(this, index, value);\n};\nBaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\nBaseVector.prototype.toArray = function baseVectorToArray() {\n    return toArrayVisitor.visit(this);\n};\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n    return byteWidthVisitor.visit(this.type);\n};\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n    return iteratorVisitor.visit(this);\n};\nBaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n    const VectorCtor = getVectorConstructor.visit(typeId);\n    VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n    VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n    return function () { return visit(this.type); };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n    return function (i) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n    return function (i, a) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Column } from './column';\nimport { Schema } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { RecordBatchReader } from './ipc/reader';\nimport { Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Chunked, StructVector } from './vector/index';\nexport class Table extends Chunked {\n    constructor(...args) {\n        let schema = null;\n        if (args[0] instanceof Schema) {\n            schema = args.shift();\n        }\n        let chunks = selectArgs(RecordBatch, args);\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n        super(new Struct(schema.fields), chunks);\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n    /** @nocollapse */\n    static empty(schema = new Schema([])) { return new Table(schema, []); }\n    /** @nocollapse */\n    static from(input) {\n        if (!input) {\n            return Table.empty();\n        }\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable(input)\n                : isAsyncIterable(input['values']) ? tableFromAsyncIterable(input)\n                    : null;\n            if (table !== null) {\n                return table;\n            }\n        }\n        let reader = RecordBatchReader.from(input);\n        if (isPromise(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n    /** @nocollapse */\n    static async fromAsync(source) {\n        return await Table.from(source);\n    }\n    /** @nocollapse */\n    static fromStruct(vector) {\n        return Table.new(vector.data.childData, vector.type.children);\n    }\n    /** @nocollapse */\n    static new(...cols) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n    get schema() { return this._schema; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get numCols() { return this._numChildren; }\n    clone(chunks = this._chunks) {\n        return new Table(this._schema, chunks);\n    }\n    getColumn(name) {\n        return this.getColumnAt(this.getColumnIndex(name));\n    }\n    getColumnAt(index) {\n        return this.getChildAt(index);\n    }\n    getColumnIndex(name) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let field, child;\n        const fields = this._schema.fields;\n        const columns = this._children || (this._children = []);\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n    // @ts-ignore\n    serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    count() {\n        return this._length;\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    assign(other) {\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []]);\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) => (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))),\n            ...indices.map((i) => other.getColumnAt(i))\n        ].filter(Boolean);\n        return new Table(...distributeVectorsIntoRecordBatches(schema, columns));\n    }\n}\nfunction tableFromIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input));\n    }\n    return null;\n}\nfunction tableFromAsyncIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n\n//# sourceMappingURL=table.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { StructVector } from './vector/index';\nexport class RecordBatch extends StructVector {\n    constructor(...args) {\n        let data;\n        let schema = args[0];\n        let children;\n        if (args[1] instanceof Data) {\n            [, data, children] = args;\n        }\n        else {\n            const fields = schema.fields;\n            const [, length, childData] = args;\n            data = Data.Struct(new Struct(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n    /** @nocollapse */\n    static from(options) {\n        if (isIterable(options['values'])) {\n            return Table.from(options);\n        }\n        return Table.from(options);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        const [fs, xs] = selectFieldArgs(args);\n        const vs = xs.filter((x) => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema(fs), vs.map((x) => x.data)));\n    }\n    clone(data, children = this._children) {\n        return new RecordBatch(this._schema, data, children);\n    }\n    concat(...others) {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n    get schema() { return this._schema; }\n    get numCols() { return this._schema.fields.length; }\n    get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch(schema, this.length, childData);\n    }\n}\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch extends RecordBatch {\n    constructor(schema) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    constructor() {\n        super(...arguments);\n        this.dictionaries = new Map();\n    }\n    static collect(batch) {\n        return new DictionaryCollector().visit(batch.data, new Struct(batch.schema.fields)).dictionaries;\n    }\n    visit(data, type) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        }\n        else {\n            data.childData.forEach((child, i) => this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    visitDictionary(data, type) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport streamAdapters from '../io/adapters';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ITERATOR_DONE, ReadableInterop, } from '../io/interfaces';\nimport { MessageReader, AsyncMessageReader, JSONMessageReader, checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding } from './message';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, isArrowJSON, isFileHandle, isFetchResponse, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\nexport class RecordBatchReader extends ReadableInterop {\n    constructor(impl) {\n        super();\n        this._impl = impl;\n    }\n    get closed() { return this._impl.closed; }\n    get schema() { return this._impl.schema; }\n    get autoDestroy() { return this._impl.autoDestroy; }\n    get dictionaries() { return this._impl.dictionaries; }\n    get numDictionaries() { return this._impl.numDictionaries; }\n    get numRecordBatches() { return this._impl.numRecordBatches; }\n    get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n    isSync() { return this._impl.isSync(); }\n    isAsync() { return this._impl.isAsync(); }\n    isFile() { return this._impl.isFile(); }\n    isStream() { return this._impl.isStream(); }\n    next() {\n        return this._impl.next();\n    }\n    throw(value) {\n        return this._impl.throw(value);\n    }\n    return(value) {\n        return this._impl.return(value);\n    }\n    cancel() {\n        return this._impl.cancel();\n    }\n    reset(schema) {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    open(options) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    readRecordBatch(index) {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    [Symbol.iterator]() {\n        return this._impl[Symbol.iterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this._impl[Symbol.asyncIterator]();\n    }\n    toDOMStream() {\n        return streamAdapters.toDOMStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }));\n    }\n    toNodeStream() {\n        return streamAdapters.toNodeStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }), { objectMode: true });\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static from(source) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        }\n        else if (isArrowJSON(source)) {\n            return fromArrowJSON(source);\n        }\n        else if (isFileHandle(source)) {\n            return fromFileHandle(source);\n        }\n        else if (isPromise(source)) {\n            return (async () => await RecordBatchReader.from(await source))();\n        }\n        else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream(new AsyncByteStream(source));\n        }\n        return fromByteStream(new ByteStream(source));\n    }\n    /** @nocollapse */\n    static readAll(source) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source);\n        }\n        else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable(source) || isIteratorResult(source)) {\n            return readAllSync(source);\n        }\n        return readAllAsync(source);\n    }\n}\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nexport class RecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { return this._impl[Symbol.iterator](); }\n    async *[Symbol.asyncIterator]() { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    [Symbol.asyncIterator]() { return this._impl[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader extends RecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nclass RecordBatchReaderImpl {\n    constructor(dictionaries = new Map()) {\n        this.closed = false;\n        this.autoDestroy = true;\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.dictionaries = dictionaries;\n    }\n    get numDictionaries() { return this._dictionaryIndex; }\n    get numRecordBatches() { return this._recordBatchIndex; }\n    isSync() { return false; }\n    isAsync() { return false; }\n    isFile() { return false; }\n    isStream() { return false; }\n    reset(schema) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n    _loadRecordBatch(header, body) {\n        return new RecordBatch(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    _loadDictionaryBatch(header, body) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id);\n            return (dictionary && isDelta ? dictionary.concat(Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0]));\n        }\n        return dictionary;\n    }\n    _loadVectors(header, body, types) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n/** @ignore */\nclass RecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n    isSync() { return true; }\n    isStream() { return true; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return this.return();\n    }\n    _readNextMessageAndValidate(type) {\n        return this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    isAsync() { return true; }\n    isStream() { return true; }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    async open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    async throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return await this.return();\n    }\n    async _readNextMessageAndValidate(type) {\n        return await this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass RecordBatchFileReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isSync() { return true; }\n    isFile() { return true; }\n    open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl extends AsyncRecordBatchStreamReaderImpl {\n    constructor(source, ...rest) {\n        const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isFile() { return true; }\n    isAsync() { return true; }\n    async open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    async readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            await this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    async _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    async _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            await this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass RecordBatchJSONReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source, dictionaries);\n    }\n    _loadVectors(header, body, types) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n    const reader = RecordBatchReader.from(source);\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do {\n                yield reader;\n            } while (!(reader.reset().open()).closed);\n        }\n    }\n    finally {\n        reader.cancel();\n    }\n}\n/** @ignore */\nasync function* readAllAsync(source) {\n    const reader = await RecordBatchReader.from(source);\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do {\n                yield reader;\n            } while (!(await reader.reset().open()).closed);\n        }\n    }\n    finally {\n        await reader.cancel();\n    }\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(function* () { }()));\n}\n/** @ignore */\nasync function fromAsyncByteStream(source) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(async function* () { }()));\n}\n/** @ignore */\nasync function fromFileHandle(source) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(file));\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../../builder/index';\n/** @ignore */\nexport function builderThroughDOMStream(options) {\n    return new BuilderTransform(options);\n}\n/** @ignore */\nexport class BuilderTransform {\n    constructor(options) {\n        // Access properties by string indexers to defeat closure compiler\n        this._numChunks = 0;\n        this._finished = false;\n        this._bufferedSize = 0;\n        const { ['readableStrategy']: readableStrategy, ['writableStrategy']: writableStrategy, ['queueingStrategy']: queueingStrategy = 'count', ...builderOptions } = options;\n        this._controller = null;\n        this._builder = Builder.new(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n        this['readable'] = new ReadableStream({\n            ['cancel']: () => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n    _writeValueAndReturnChunkSize(value) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n    _maybeFlush(builder, controller) {\n        if (controller === null) {\n            return;\n        }\n        if (this._bufferedSize >= controller.desiredSize) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n    _enqueue(controller, chunk) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n/** @ignore */ const chunkLength = (chunk) => chunk.length;\n/** @ignore */ const chunkByteLength = (chunk) => chunk.byteLength;\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DictionaryVector } from '../vector/dictionary';\n/** @ignore */\nexport class Value {\n    eq(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new Equals(this, other);\n    }\n    le(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new LTeq(this, other);\n    }\n    ge(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new GTeq(this, other);\n    }\n    lt(other) {\n        return new Not(this.ge(other));\n    }\n    gt(other) {\n        return new Not(this.le(other));\n    }\n    ne(other) {\n        return new Not(this.eq(other));\n    }\n}\n/** @ignore */\nexport class Literal extends Value {\n    constructor(v) {\n        super();\n        this.v = v;\n    }\n}\n/** @ignore */\nexport class Col extends Value {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    bind(batch) {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) {\n                throw new Error(`Failed to bind Col \"${this.name}\"`);\n            }\n        }\n        const vec = this.vector = batch.getChildAt(this.colidx);\n        return (idx) => vec.get(idx);\n    }\n}\n/** @ignore */\nexport class Predicate {\n    and(...expr) { return new And(this, ...expr); }\n    or(...expr) { return new Or(this, ...expr); }\n    not() { return new Not(this); }\n}\n/** @ignore */\nexport class ComparisonPredicate extends Predicate {\n    constructor(left, right) {\n        super();\n        this.left = left;\n        this.right = right;\n    }\n    bind(batch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindLitCol(batch, this.left, this.right);\n            }\n        }\n        else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindColCol(batch, this.left, this.right);\n            }\n        }\n    }\n}\n/** @ignore */\nexport class CombinationPredicate extends Predicate {\n    constructor(...children) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\nCombinationPredicate.prototype.children = Object.freeze([]); // freeze for safety\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ands\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.every((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ors\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.some((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v == right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, batch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key;\n            const vector = col.vector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            }\n            else {\n                key = this.lastKey;\n            }\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            }\n            else {\n                return (idx) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        }\n        else {\n            return (idx, cols) => col_func(idx, cols) == lit.v;\n        }\n    }\n    _bindLitCol(batch, lit, col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v <= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) <= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v <= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v >= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) >= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v >= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(child) {\n        super();\n        this.child = child;\n    }\n    bind(batch) {\n        const func = this.child.bind(batch);\n        return (idx, batch) => !func(idx, batch);\n    }\n}\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(next, bind_) {\n        super();\n        this.next = next;\n        this.bind_ = bind_;\n    }\n    bind(batch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\nexport function lit(v) { return new Literal(v); }\nexport function col(n) { return new Col(n); }\nexport function and(...p) { return new And(...p); }\nexport function or(...p) { return new Or(...p); }\nexport function custom(next, bind) {\n    return new CustomPredicate(next, bind);\n}\n\n//# sourceMappingURL=predicate.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { DataType } from '../type';\nTable.prototype.countBy = function (name) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function (next, bind) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function (next, bind) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function (predicate) { return new DataFrame(this.chunks).filter(predicate); };\nexport class DataFrame extends Table {\n    filter(predicate) {\n        return new FilteredDataFrame(this.chunks, predicate);\n    }\n    scan(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    countBy(name) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n/** @ignore */\nexport class CountByResult extends Table {\n    constructor(values, counts) {\n        const schema = new Schema([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch(schema, counts.length, [values, counts]));\n    }\n    toJSON() {\n        const values = this.getColumnAt(0);\n        const counts = this.getColumnAt(1);\n        const result = {};\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n/** @ignore */\nexport class FilteredDataFrame extends DataFrame {\n    constructor(batches, predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    scan(next, bind) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    count() {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    ++sum;\n                }\n            }\n        }\n        return sum;\n    }\n    *[Symbol.iterator]() {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    yield batch.get(index);\n                }\n            }\n        }\n    }\n    filter(predicate) {\n        return new FilteredDataFrame(this._chunks, this._predicate.and(predicate));\n    }\n    countBy(name) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n//# sourceMappingURL=dataframe.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType, Data, DataType, Null, Bool, Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64, Float, Float16, Float32, Float64, Utf8, Binary, FixedSizeBinary, Date_, DateDay, DateMillisecond, Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond, Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond, Decimal, List, Struct, Union, DenseUnion, SparseUnion, Dictionary, Interval, IntervalDayTime, IntervalYearMonth, FixedSizeList, Map_, Table, Column, Schema, Field, Visitor, Vector, BaseVector, BinaryVector, BoolVector, Chunked, DateVector, DateDayVector, DateMillisecondVector, DecimalVector, DictionaryVector, FixedSizeBinaryVector, FixedSizeListVector, FloatVector, Float16Vector, Float32Vector, Float64Vector, IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector, IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, ListVector, MapVector, NullVector, StructVector, TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector, TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector, UnionVector, DenseUnionVector, SparseUnionVector, Utf8Vector, ByteStream, AsyncByteStream, AsyncByteQueue, RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader, RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter, MessageReader, AsyncMessageReader, JSONMessageReader, Message, RecordBatch, DataFrame, FilteredDataFrame, CountByResult, predicate, util, Builder, BinaryBuilder, BoolBuilder, DateBuilder, DateDayBuilder, DateMillisecondBuilder, DecimalBuilder, DictionaryBuilder, FixedSizeBinaryBuilder, FixedSizeListBuilder, FloatBuilder, Float16Builder, Float32Builder, Float64Builder, IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder, IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder, ListBuilder, MapBuilder, NullBuilder, StructBuilder, TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder, TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder, UnionBuilder, DenseUnionBuilder, SparseUnionBuilder, Utf8Builder, } from './Arrow';\n\n//# sourceMappingURL=Arrow.dom.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../../util/buffer';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n/** @ignore */\nexport function toDOMStream(source, options) {\n    if (isAsyncIterable(source)) {\n        return asyncIterableAsReadableDOMStream(source, options);\n    }\n    if (isIterable(source)) {\n        return iterableAsReadableDOMStream(source, options);\n    }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    async function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=iterable.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n    const queue = new AsyncByteQueue();\n    let reader = null;\n    const readable = new ReadableStream({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n    async function open() {\n        return await (await RecordBatchReader.from(queue)).open(readableStrategy);\n    }\n    async function next(controller, reader) {\n        let size = controller.desiredSize;\n        let r = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteStream } from '../../io/stream';\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream(writableStrategy, readableStrategy) {\n    const writer = new this(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n    async function next(controller) {\n        let buf = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=writer.mjs.map\n","import { Table, Type } from \"apache-arrow\";\r\nexport class ArrowTable {\r\n    constructor(dataBuffer, indexBuffer, columnsBuffer, styler) {\r\n        this.getCell = (rowIndex, columnIndex) => {\r\n            const isBlankCell = rowIndex < this.headerRows && columnIndex < this.headerColumns;\r\n            const isIndexCell = rowIndex >= this.headerRows && columnIndex < this.headerColumns;\r\n            const isColumnsCell = rowIndex < this.headerRows && columnIndex >= this.headerColumns;\r\n            if (isBlankCell) {\r\n                const classNames = [\"blank\"];\r\n                if (columnIndex > 0) {\r\n                    classNames.push(\"level\" + rowIndex);\r\n                }\r\n                return {\r\n                    type: \"blank\",\r\n                    classNames: classNames.join(\" \"),\r\n                    content: \"\",\r\n                };\r\n            }\r\n            else if (isColumnsCell) {\r\n                const dataColumnIndex = columnIndex - this.headerColumns;\r\n                const classNames = [\r\n                    \"col_heading\",\r\n                    \"level\" + rowIndex,\r\n                    \"col\" + dataColumnIndex,\r\n                ];\r\n                return {\r\n                    type: \"columns\",\r\n                    classNames: classNames.join(\" \"),\r\n                    content: this.getContent(this.columnsTable, dataColumnIndex, rowIndex),\r\n                };\r\n            }\r\n            else if (isIndexCell) {\r\n                const dataRowIndex = rowIndex - this.headerRows;\r\n                const classNames = [\r\n                    \"row_heading\",\r\n                    \"level\" + columnIndex,\r\n                    \"row\" + dataRowIndex,\r\n                ];\r\n                return {\r\n                    type: \"index\",\r\n                    id: `T_${this.uuid}level${columnIndex}_row${dataRowIndex}`,\r\n                    classNames: classNames.join(\" \"),\r\n                    content: this.getContent(this.indexTable, dataRowIndex, columnIndex),\r\n                };\r\n            }\r\n            else {\r\n                const dataRowIndex = rowIndex - this.headerRows;\r\n                const dataColumnIndex = columnIndex - this.headerColumns;\r\n                const classNames = [\r\n                    \"data\",\r\n                    \"row\" + dataRowIndex,\r\n                    \"col\" + dataColumnIndex,\r\n                ];\r\n                const content = this.styler\r\n                    ? this.getContent(this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\r\n                    : this.getContent(this.dataTable, dataRowIndex, dataColumnIndex);\r\n                return {\r\n                    type: \"data\",\r\n                    id: `T_${this.uuid}row${dataRowIndex}_col${dataColumnIndex}`,\r\n                    classNames: classNames.join(\" \"),\r\n                    content,\r\n                };\r\n            }\r\n        };\r\n        this.getContent = (table, rowIndex, columnIndex) => {\r\n            const column = table.getColumnAt(columnIndex);\r\n            if (column === null) {\r\n                return \"\";\r\n            }\r\n            const columnTypeId = this.getColumnTypeId(table, columnIndex);\r\n            switch (columnTypeId) {\r\n                case Type.Timestamp: {\r\n                    return this.nanosToDate(column.get(rowIndex));\r\n                }\r\n                default: {\r\n                    return column.get(rowIndex);\r\n                }\r\n            }\r\n        };\r\n        this.dataTable = Table.from(dataBuffer);\r\n        this.indexTable = Table.from(indexBuffer);\r\n        this.columnsTable = Table.from(columnsBuffer);\r\n        this.styler = styler\r\n            ? {\r\n                caption: styler.get(\"caption\"),\r\n                displayValuesTable: Table.from(styler.get(\"displayValues\")),\r\n                styles: styler.get(\"styles\"),\r\n                uuid: styler.get(\"uuid\"),\r\n            }\r\n            : undefined;\r\n    }\r\n    get rows() {\r\n        return this.indexTable.length + this.columnsTable.numCols;\r\n    }\r\n    get columns() {\r\n        return this.indexTable.numCols + this.columnsTable.length;\r\n    }\r\n    get headerRows() {\r\n        return this.rows - this.dataRows;\r\n    }\r\n    get headerColumns() {\r\n        return this.columns - this.dataColumns;\r\n    }\r\n    get dataRows() {\r\n        return this.dataTable.length;\r\n    }\r\n    get dataColumns() {\r\n        return this.dataTable.numCols;\r\n    }\r\n    get uuid() {\r\n        return this.styler && this.styler.uuid;\r\n    }\r\n    get caption() {\r\n        return this.styler && this.styler.caption;\r\n    }\r\n    get styles() {\r\n        return this.styler && this.styler.styles;\r\n    }\r\n    get table() {\r\n        return this.dataTable;\r\n    }\r\n    get index() {\r\n        return this.indexTable;\r\n    }\r\n    get columnTable() {\r\n        return this.columnsTable;\r\n    }\r\n    /* Returns apache-arrow specific typeId of column.*/\r\n    getColumnTypeId(table, columnIndex) {\r\n        return table.schema.fields[columnIndex].type.typeId;\r\n    }\r\n    nanosToDate(nanos) {\r\n        return new Date(nanos / 1e6);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright 2018-2020 Streamlit Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Safari doesn't support the EventTarget class, so we use a shim.\r\nimport { EventTarget } from \"event-target-shim\";\r\nimport { ArrowTable } from \"./ArrowTable\";\r\n/** Messages from Component -> Streamlit */\r\nvar ComponentMessageType;\r\n(function (ComponentMessageType) {\r\n    // A component sends this message when it's ready to receive messages\r\n    // from Streamlit. Streamlit won't send any messages until it gets this.\r\n    // Data: { apiVersion: number }\r\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\r\n    // The component has a new widget value. Send it back to Streamlit, which\r\n    // will then re-run the app.\r\n    // Data: { value: any }\r\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\r\n    // The component has a new height for its iframe.\r\n    // Data: { height: number }\r\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\r\n})(ComponentMessageType || (ComponentMessageType = {}));\r\n/**\r\n * Streamlit communication API.\r\n *\r\n * Components can send data to Streamlit via the functions defined here,\r\n * and receive data from Streamlit via the `events` property.\r\n */\r\nexport class Streamlit {\r\n}\r\n/**\r\n * The Streamlit component API version we're targetting.\r\n * There's currently only 1!\r\n */\r\nStreamlit.API_VERSION = 1;\r\nStreamlit.RENDER_EVENT = \"streamlit:render\";\r\n/** Dispatches events received from Streamlit. */\r\nStreamlit.events = new EventTarget();\r\nStreamlit.registeredMessageListener = false;\r\n/**\r\n * Tell Streamlit that the component is ready to start receiving data.\r\n * Streamlit will defer emitting RENDER events until it receives the\r\n * COMPONENT_READY message.\r\n */\r\nStreamlit.setComponentReady = () => {\r\n    if (!Streamlit.registeredMessageListener) {\r\n        // Register for message events if we haven't already\r\n        window.addEventListener(\"message\", Streamlit.onMessageEvent);\r\n        Streamlit.registeredMessageListener = true;\r\n    }\r\n    Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\r\n        apiVersion: Streamlit.API_VERSION,\r\n    });\r\n};\r\n/**\r\n * Report the component's height to Streamlit.\r\n * This should be called every time the component changes its DOM - that is,\r\n * when it's first loaded, and any time it updates.\r\n */\r\nStreamlit.setFrameHeight = (height) => {\r\n    if (height === undefined) {\r\n        // `height` is optional. If undefined, it defaults to scrollHeight,\r\n        // which is the entire height of the element minus its border,\r\n        // scrollbar, and margin.\r\n        height = document.body.scrollHeight;\r\n    }\r\n    if (height === Streamlit.lastFrameHeight) {\r\n        // Don't bother updating if our height hasn't changed.\r\n        return;\r\n    }\r\n    Streamlit.lastFrameHeight = height;\r\n    Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height });\r\n};\r\n/**\r\n * Set the component's value. This value will be returned to the Python\r\n * script, and the script will be re-run.\r\n *\r\n * For example:\r\n *\r\n * JavaScript:\r\n * Streamlit.setComponentValue(\"ahoy!\")\r\n *\r\n * Python:\r\n * value = st.my_component(...)\r\n * st.write(value) # -> \"ahoy!\"\r\n *\r\n * The value must be serializable into JSON.\r\n */\r\nStreamlit.setComponentValue = (value) => {\r\n    Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, { value });\r\n};\r\n/** Receive a ForwardMsg from the Streamlit app */\r\nStreamlit.onMessageEvent = (event) => {\r\n    const type = event.data[\"type\"];\r\n    switch (type) {\r\n        case Streamlit.RENDER_EVENT:\r\n            Streamlit.onRenderMessage(event.data);\r\n            break;\r\n    }\r\n};\r\n/**\r\n * Handle an untyped Streamlit render event and redispatch it as a\r\n * StreamlitRenderEvent.\r\n */\r\nStreamlit.onRenderMessage = (data) => {\r\n    let args = data[\"args\"];\r\n    if (args == null) {\r\n        console.error(`Got null args in onRenderMessage. This should never happen`);\r\n        args = {};\r\n    }\r\n    // Parse our dataframe arguments with arrow, and merge them into our args dict\r\n    const dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\r\n        ? Streamlit.argsDataframeToObject(data[\"dfs\"])\r\n        : {};\r\n    args = {\r\n        ...args,\r\n        ...dataframeArgs,\r\n    };\r\n    const disabled = Boolean(data[\"disabled\"]);\r\n    // Dispatch a render event!\r\n    const eventData = { disabled, args };\r\n    const event = new CustomEvent(Streamlit.RENDER_EVENT, {\r\n        detail: eventData,\r\n    });\r\n    Streamlit.events.dispatchEvent(event);\r\n};\r\nStreamlit.argsDataframeToObject = (argsDataframe) => {\r\n    const argsDataframeArrow = argsDataframe.map(({ key, value }) => [key, Streamlit.toArrowTable(value)]);\r\n    return Object.fromEntries(argsDataframeArrow);\r\n};\r\nStreamlit.toArrowTable = (df) => {\r\n    const { data, index, columns } = df.data;\r\n    return new ArrowTable(data, index, columns);\r\n};\r\n/** Post a message to the Streamlit app. */\r\nStreamlit.sendBackMsg = (type, data) => {\r\n    window.parent.postMessage({\r\n        isStreamlitMessage: true,\r\n        type: type,\r\n        ...data,\r\n    }, \"*\");\r\n};\r\n","<script lang=\"ts\">\n  import { onMount, afterUpdate, onDestroy } from \"svelte\";\n  import { Streamlit } from \"./streamlit\";\n  import type { RenderData } from \"./streamlit\";\n\n  /**\n   * Custom Streamlit component\n   */\n  export let component: any;\n\n  /**\n   * Set to false if you want `args` (the named dictionary of arguments passed\n   * from Python) to be passed as a dictionary to your component.\n   *\n   * Default is `true`.\n   */\n  export let spreadArgs: boolean = true;\n\n  // State\n  let renderData: RenderData;\n\n  //  Props passed to custom Streamlit components.\n  /** Named dictionary of arguments passed from Python.\n   *  Arguments will be passed directly if `spreadArgs=true`\n   */\n  let args: any;\n\n  /** The component's width. */\n  let width: number;\n\n  /**\n   * True if the component should be disabled.\n   * All components get disabled while the app is being re-run,\n   * and become re-enabled when the re-run has finished.\n   */\n  let disabled: boolean;\n\n  /**\n   * Streamlit is telling this component to redraw.\n   * We save the render data in State, so that it can be passed to the\n   * component.\n   */\n  const onRenderEvent = (event: Event): void => {\n    // Update our state with the newest render data\n    renderData = (event as CustomEvent<RenderData>).detail;\n    args = renderData.args;\n    disabled = renderData.disabled;\n  };\n\n  onMount((): void => {\n    // Set up event listeners, and signal to Streamlit that we're ready.\n    // We won't render the component until we receive the first RENDER_EVENT.\n    Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\n    Streamlit.setComponentReady();\n  });\n\n  onDestroy((): void => {\n    // Remove our `onRender` handler to Streamlit's render event.\n    Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\n  });\n</script>\n\n<svelte:window bind:innerWidth={width} />\n<!-- Don't render until we've gotten our first RENDER_EVENT from Streamlit. -->\n{#if renderData}\n  {#if spreadArgs}\n    <svelte:component this={component} {...args} {disabled} {width} />\n  {:else}\n    <svelte:component this={component} {args} {disabled} {width} />\n  {/if}\n{/if}\n","import { onMount, afterUpdate } from \"svelte\";\r\nimport { Streamlit } from \"./streamlit\";\r\nexport const setStreamlitLifecycle = () => {\r\n    onMount(() => {\r\n        Streamlit.setFrameHeight();\r\n    });\r\n    afterUpdate(() => {\r\n        // In here I tell Streamlit to update my frameHeight after each update, in\r\n        // case it has changed. (This isn't strictly necessary for the example\r\n        // because our height stays fixed, but this is a low-cost function, so\r\n        // there's no harm in doing it redundantly.)\r\n        Streamlit.setFrameHeight();\r\n    });\r\n};\r\n","<script lang=\"ts\">\n  import { Streamlit, setStreamlitLifecycle } from \"./streamlit\";\n  setStreamlitLifecycle();\n\n  export let imageUrls: Array<string>;\n  export let height: number;\n\n  let selectedImageUrl: string;\n\n  function image_onclick(event: any) {\n    selectedImageUrl = event.srcElement.currentSrc;\n    Streamlit.setComponentValue(selectedImageUrl);\n  }\n</script>\n\n\n<div class=\"scroller\">\n  {#each imageUrls as imageUrl}\n      <img src={imageUrl} id={imageUrl} alt=\"\" style=\"height: {height}px;\" on:click={image_onclick}>\n  {/each}\n</div>\n\n\n<style>\n  .scroller {\n    min-height: 100px;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    white-space: nowrap;\n  }\n\timg { \n    display: inline-block;\n    padding: 1%;\n    border-radius: 20px;\n    opacity: 0.9; \n    transition: all .2s; \n  }\n\n\timg:hover { \n    opacity: 1; \n    transform: scale(1.05); \n    cursor: pointer;\n  }\n</style>\n\n\n\n\n\n\n","import { WithStreamlitConnection } from \"./streamlit\";\r\nimport ImageGallery from \"./ImageGallery.svelte\";\r\n// \"WithStreamlitConnection\" is a wrapper component. It bootstraps the\r\n// connection between your component and the Streamlit app, and handles\r\n// passing arguments from Python -> Component.\r\n//\r\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\r\nconst imageGallery = new WithStreamlitConnection({\r\n    target: document.body,\r\n    props: {\r\n        /**\r\n         * Custom Streamlit component\r\n         */\r\n        component: ImageGallery,\r\n        /**\r\n         * Set to false if you want `args` (the named dictionary of arguments passed\r\n         * from Python) to be passed as a dictionary to your component.\r\n         *\r\n         * Default is `true`.\r\n         */\r\n        spreadArgs: true,\r\n    },\r\n});\r\nexport default ImageGallery;\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","element","name","empty","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","setProperty","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","privateData","WeakMap","wrappers","pd","retv","get","console","assert","setCancelFlag","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","prototype","wrapper","BaseEvent","CustomEvent","call","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","listenerType","listener","next","prev","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","isArray","types","optionsIsObj","capture","undefined","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","flatbuffers","inRange","min","max","ToDictionary","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","slice","endOfStream","read","shift","prepend","token","unshift","decoderError","fatal","opt_code_point","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","count","temp","decode","input","ArrayBuffer","byteOffset","byteLength","input_stream","code_points","cp","codePointsToString","encode","opt_string","string","n","u","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","toString","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","ITERATOR_DONE","freeze","done","ArrowJSON","_json","schema","batches","dictionaries","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","super","_values","resolvers","_closedPromise","_closedPromiseResolve","closed","reason","return","_ensureOpen","_error","reject","Symbol","asyncIterator","streamAdapters","_","abort","close","_args","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BYTES_PER_ELEMENT","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","isBoolean","isFunction","isPromise","isIterable","iterator","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isNumber","isFetchResponse","isReadableDOMStream","isReadableNodeStream","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","Math","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","Infinity","toArrayBufferView","ArrayBufferViewCtor","isView","toInt32Array","toBigInt64Array","toBigUint64Array","pump","toArrayBufferViewIterator","ArrayCtor","wrap","buffers","it","toUint8ArrayIterator","async","toArrayBufferViewAsyncIterator","emit","toUint8ArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","cmd","threw","bufferLength","isNaN","e","throw","fromAsyncIterable","fromDOMStream","AdaptiveByteReader","releaseLock","fromNodeStream","events","onEvent","race","isFinite","evt","destroy","cleanup","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","AbstractVector","org","apache","arrow","flatbuf","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867.org","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","BufferType","Schema_.org","Message_.org","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","iterateBits","values","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","arr","cnt","pos","view","DataView","popcnt_uint32","getUint32","getUint16","getUint8","uint32","Visitor","args","visit","getVisitFn","throwIfNotFound","visitor","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","compareFields","fields","others","every","f","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","compareInterval","indices","dictionary","comparer","toStringTag","ArrayType","Int_","Int8Array","Int16Array","Uint32Array","Date_","Time_","Timestamp_","Interval_","child","valueType","valueField","join","Union_","typeIdToChildIndex","idx","Map_","keyType","getId","atomicDictionaryId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","Function","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","reservedLength","reservedByteLength","extra","reserved","array","sliceOrExtendArray","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","numInvalid","val","cur","OffsetsBufferBuilder","WideBufferBuilder","ArrayType64","_ArrayType64","buffer64","nulls","finished","_nulls","_isValid","queueingStrategy","highWaterMark","sizeProperty","numChunks","new","append","toVector","throughIterable","throughAsyncIterable","numChildren","_offsets","_typeIds","setValid","isValid","setValue","_setValue","valid","offsets","last","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","dictionaryHashFunction","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","bignumToString","bignumToBigInt","decimalToString","digits","base64","base32","checks","reverse","toJSON","valueOf","hint","TypedArray","BigIntArray","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","values64","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","memo","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","v","kr","vr","callbackfn","thisArg","str","defineProperties","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","desc","row","getter","setter","hasOwnProperty","Proxy","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","receiver","Reflect","tmp","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","selectChunkArgs","flatten","VectorName","chunk","isDictionary","_indices","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","self","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","Column","_field","SingleChunkColumn","some","metadata","column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","res","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","entries","fieldIndex","valueIndex","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","bind","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_.org","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","numRecordBatches","rb","FileBlock","startDictionariesVector","numDictionaries","db","dictionaryBatchesOffset","finishFooterBuffer","getRecordBatch","getDictionaryBatch","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","write","sync","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","fieldNodes","validity","buffersFromJSON","BufferRegion","fieldChildrenFromJSON","fromJSON","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_id","_isDelta","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","assembler","vectorChildren","assembleResult","RangeError","isNull","addBuffer","_nullV","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writableStrategy","readableStrategy","writeAll","writeAllAsync","reset","sink","isWritableNodeStream","objectMode","_writeFooter","compareTo","_writeSchema","payload","Table","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","_writeMessage","assemble","metadata.RecordBatch","_writeDictionaries","_writeBodyBuffers","metadata.DictionaryBatch","padding","_writeDictionaryBatch","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","BaseVector","_bindDataAccessors","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","ctor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","____","visitFields","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","fn.partial2","fn.partial0","partialType0","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","selectColumnArgs","numCols","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","oldToNew","newIdx","_f","_fs","fs","vs","batchData","ensureSameLengthData","_dictionaries","DictionaryCollector","collect","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","RecordBatchFileReaderImpl","fromAsyncByteStream","RecordBatchStreamReaderImpl","fromByteStream","readAllSync","readAllAsync","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_readFooter","_readDictionaryBatch","seek","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","pull","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","bm","hwm","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","styles","rows","dataRows","dataColumns","columnTable","nanos","ComponentMessageType","Streamlit","levels","updates","to_null_out","accounted_for","$$scope","spread_props","renderData","width","disabled","spreadArgs","onRenderEvent","detail","RENDER_EVENT","setComponentReady","API_VERSION","registeredMessageListener","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","eventData","dispatchEvent","argsDataframe","argsDataframeArrow","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","setStreamlitLifecycle","iterations","selectedImageUrl","imageUrls","currentSrc","ImageGallery"],"mappings":"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"}